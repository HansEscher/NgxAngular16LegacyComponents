{"version":3,"file":"owner-test-component.mjs","sources":["../../../projects/test-component/src/lib/utils.ts","../../../projects/test-component/src/lib/angular-split-config.token.ts","../../../projects/test-component/src/lib/split.component.ts","../../../projects/test-component/src/lib/split-area.directive.ts","../../../projects/test-component/src/lib/mat-select-no-entries-found.directive.ts","../../../projects/test-component/src/lib/mat-select-search-clear.directive.ts","../../../projects/test-component/src/lib/default-options.ts","../../../projects/test-component/src/lib/mat-select-search.component.ts","../../../projects/test-component/src/lib/mat-select-search.component.html","../../../projects/test-component/src/lib/ngx-mat-select-search.module.ts","../../../projects/test-component/src/lib/test-component.service.ts","../../../projects/test-component/src/lib/test-component.component.ts","../../../projects/test-component/src/lib/test-component.module.ts","../../../projects/test-component/src/public-api.ts","../../../projects/test-component/src/owner-test-component.ts"],"sourcesContent":["import { ElementRef } from '@angular/core';\r\n\r\nimport { IArea, IPoint, IAreaSnapshot, ISplitSideAbsorptionCapacity, IAreaAbsorptionCapacity } from './interface';\r\n\r\nexport function getPointFromEvent(event: MouseEvent | TouchEvent | KeyboardEvent): IPoint | null {\r\n  // TouchEvent\r\n  if ((<TouchEvent>event).changedTouches !== undefined && (<TouchEvent>event).changedTouches.length > 0) {\r\n    return {\r\n      x: (<TouchEvent>event).changedTouches[0].clientX,\r\n      y: (<TouchEvent>event).changedTouches[0].clientY,\r\n    };\r\n  }\r\n  // MouseEvent\r\n  else if ((<MouseEvent>event).clientX !== undefined && (<MouseEvent>event).clientY !== undefined) {\r\n    return {\r\n      x: (<MouseEvent>event).clientX,\r\n      y: (<MouseEvent>event).clientY,\r\n    };\r\n  }\r\n  // KeyboardEvent\r\n  else if ((<KeyboardEvent>event).currentTarget !== undefined) {\r\n    const gutterEl = event.currentTarget as HTMLElement;\r\n    return {\r\n      x: gutterEl.offsetLeft,\r\n      y: gutterEl.offsetTop,\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function pointDeltaEquals(lhs: IPoint, rhs: IPoint, deltaPx: number) {\r\n  return Math.abs(lhs.x - rhs.x) <= deltaPx && Math.abs(lhs.y - rhs.y) <= deltaPx;\r\n}\r\n\r\nexport function getKeyboardEndpoint(event: KeyboardEvent, direction: 'horizontal' | 'vertical'): IPoint | null {\r\n  // Return null if direction keys on the opposite axis were pressed\r\n  if (direction === 'horizontal') {\r\n    switch (event.key) {\r\n      case 'ArrowLeft':\r\n      case 'ArrowRight':\r\n      case 'PageUp':\r\n      case 'PageDown':\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  if (direction === 'vertical') {\r\n    switch (event.key) {\r\n      case 'ArrowUp':\r\n      case 'ArrowDown':\r\n      case 'PageUp':\r\n      case 'PageDown':\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  const gutterEl = event.currentTarget as HTMLElement;\r\n  const offset = event.key === 'PageUp' || event.key === 'PageDown' ? 50 * 10 : 50;\r\n  let offsetX = gutterEl.offsetLeft,\r\n    offsetY = gutterEl.offsetTop;\r\n  switch (event.key) {\r\n    case 'ArrowLeft':\r\n      offsetX -= offset;\r\n      break;\r\n    case 'ArrowRight':\r\n      offsetX += offset;\r\n      break;\r\n    case 'ArrowUp':\r\n      offsetY -= offset;\r\n      break;\r\n    case 'ArrowDown':\r\n      offsetY += offset;\r\n      break;\r\n    case 'PageUp':\r\n      if (direction === 'vertical') {\r\n        offsetY -= offset;\r\n      } else {\r\n        offsetX += offset;\r\n      }\r\n      break;\r\n    case 'PageDown':\r\n      if (direction === 'vertical') {\r\n        offsetY += offset;\r\n      } else {\r\n        offsetX -= offset;\r\n      }\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return {\r\n    x: offsetX,\r\n    y: offsetY,\r\n  };\r\n}\r\n\r\nexport function getElementPixelSize(elRef: ElementRef, direction: 'horizontal' | 'vertical'): number {\r\n  const rect = (<HTMLElement>elRef.nativeElement).getBoundingClientRect();\r\n\r\n  return direction === 'horizontal' ? rect.width : rect.height;\r\n}\r\n\r\nexport function getInputBoolean(v: any): boolean {\r\n  return typeof v === 'boolean' ? v : v === 'false' ? false : true;\r\n}\r\n\r\nexport function getInputPositiveNumber<T>(v: any, defaultValue: T): number | T {\r\n  if (v === null || v === undefined) return defaultValue;\r\n\r\n  v = Number(v);\r\n  return !isNaN(v) && v >= 0 ? v : defaultValue;\r\n}\r\n\r\nexport function isUserSizesValid(unit: 'percent' | 'pixel', sizes: Array<number | null>): boolean {\r\n  // All sizes have to be not null and total should be 100\r\n  if (unit === 'percent') {\r\n    let total = 0;\r\n    sizes.forEach(a_size=>{ if (a_size !== null) total += a_size; });\r\n    return sizes.every((s) => s !== null) && total > 99.9 && total < 100.1;\r\n  }\r\n\r\n  // A size at null is mandatory but only one.\r\n  if (unit === 'pixel') {\r\n    return sizes.filter((s) => s === null).length === 1;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function getAreaMinSize(a: IArea): null | number {\r\n  if (a.size === null) {\r\n    return null;\r\n  }\r\n\r\n  if (a.component.lockSize === true) {\r\n    return a.size;\r\n  }\r\n\r\n  if (a.component.minSize === null) {\r\n    return null;\r\n  }\r\n\r\n  if (a.component.minSize > a.size) {\r\n    return a.size;\r\n  }\r\n\r\n  return a.component.minSize;\r\n}\r\n\r\nexport function getAreaMaxSize(a: IArea): null | number {\r\n  if (a.size === null) {\r\n    return null;\r\n  }\r\n\r\n  if (a.component.lockSize === true) {\r\n    return a.size;\r\n  }\r\n\r\n  if (a.component.maxSize === null) {\r\n    return null;\r\n  }\r\n\r\n  if (a.component.maxSize < a.size) {\r\n    return a.size;\r\n  }\r\n\r\n  return a.component.maxSize;\r\n}\r\n\r\nexport function getGutterSideAbsorptionCapacity(\r\n  unit: 'percent' | 'pixel',\r\n  sideAreas: Array<IAreaSnapshot>,\r\n  pixels: number,\r\n  allAreasSizePixel: number,\r\n): ISplitSideAbsorptionCapacity {\r\n  return sideAreas.reduce(\r\n    (acc, area) => {\r\n      const res = getAreaAbsorptionCapacity(unit, area, acc.remain, allAreasSizePixel);\r\n      if (res !== null) {\r\n        acc.list.push(res);\r\n        acc.remain = res.pixelRemain;\r\n      }\r\n      return acc;\r\n    },\r\n    { remain: pixels, list: [] } as ISplitSideAbsorptionCapacity,\r\n  );\r\n}\r\n\r\nfunction getAreaAbsorptionCapacity(\r\n  unit: 'percent' | 'pixel',\r\n  areaSnapshot: IAreaSnapshot,\r\n  pixels: number,\r\n  allAreasSizePixel: number,\r\n): IAreaAbsorptionCapacity | null {\r\n  // No pain no gain\r\n  if (pixels === 0) {\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: 0,\r\n      percentAfterAbsorption: areaSnapshot.sizePercentAtStart,\r\n      pixelRemain: 0,\r\n    };\r\n  }\r\n\r\n  // Area start at zero and need to be reduced, not possible\r\n  if (areaSnapshot.sizePixelAtStart === 0 && pixels < 0) {\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: 0,\r\n      percentAfterAbsorption: 0,\r\n      pixelRemain: pixels,\r\n    };\r\n  }\r\n\r\n  if (unit === 'percent') {\r\n    return getAreaAbsorptionCapacityPercent(areaSnapshot, pixels, allAreasSizePixel);\r\n  }\r\n\r\n  if (unit === 'pixel') {\r\n    return getAreaAbsorptionCapacityPixel(areaSnapshot, pixels, allAreasSizePixel);\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction getAreaAbsorptionCapacityPercent(\r\n  areaSnapshot: IAreaSnapshot,\r\n  pixels: number,\r\n  allAreasSizePixel: number,\r\n): IAreaAbsorptionCapacity | null {\r\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels;\r\n  const tempPercentSize = (tempPixelSize / allAreasSizePixel) * 100;\r\n\r\n  // ENLARGE AREA\r\n\r\n  if (pixels > 0) {\r\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\r\n    if (areaSnapshot.area.maxSize !== null && tempPercentSize > areaSnapshot.area.maxSize) {\r\n      // Use area.area.maxSize as newPercentSize and return calculate pixels remaining\r\n      const maxSizePixel = (areaSnapshot.area.maxSize / 100) * allAreasSizePixel;\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: maxSizePixel,\r\n        percentAfterAbsorption: areaSnapshot.area.maxSize,\r\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - maxSizePixel,\r\n      };\r\n    }\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: pixels,\r\n      percentAfterAbsorption: tempPercentSize > 100 ? 100 : tempPercentSize,\r\n      pixelRemain: 0,\r\n    };\r\n  }\r\n\r\n  // REDUCE AREA\r\n  else if (pixels < 0) {\r\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\r\n    if (areaSnapshot.area.minSize !== null && tempPercentSize < areaSnapshot.area.minSize) {\r\n      // Use area.area.minSize as newPercentSize and return calculate pixels remaining\r\n      const minSizePixel = (areaSnapshot.area.minSize / 100) * allAreasSizePixel;\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: minSizePixel,\r\n        percentAfterAbsorption: areaSnapshot.area.minSize,\r\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - minSizePixel,\r\n      };\r\n    }\r\n    // If reduced under zero > return remaining pixels\r\n    else if (tempPercentSize < 0) {\r\n      // Use 0 as newPercentSize and return calculate pixels remaining\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\r\n        percentAfterAbsorption: 0,\r\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\r\n      };\r\n    }\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: pixels,\r\n      percentAfterAbsorption: tempPercentSize,\r\n      pixelRemain: 0,\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction getAreaAbsorptionCapacityPixel(\r\n  areaSnapshot: IAreaSnapshot,\r\n  pixels: number,\r\n  containerSizePixel: number,\r\n): IAreaAbsorptionCapacity | null {\r\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels;\r\n\r\n  // ENLARGE AREA\r\n\r\n  if (pixels > 0) {\r\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\r\n    if (areaSnapshot.area.maxSize !== null && tempPixelSize > areaSnapshot.area.maxSize) {\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: areaSnapshot.area.maxSize - areaSnapshot.sizePixelAtStart,\r\n        percentAfterAbsorption: -1,\r\n        pixelRemain: tempPixelSize - areaSnapshot.area.maxSize,\r\n      };\r\n    }\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: pixels,\r\n      percentAfterAbsorption: -1,\r\n      pixelRemain: 0,\r\n    };\r\n  }\r\n\r\n  // REDUCE AREA\r\n  else if (pixels < 0) {\r\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\r\n    if (areaSnapshot.area.minSize !== null && tempPixelSize < areaSnapshot.area.minSize) {\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: areaSnapshot.area.minSize + pixels - tempPixelSize,\r\n        percentAfterAbsorption: -1,\r\n        pixelRemain: tempPixelSize - areaSnapshot.area.minSize,\r\n      };\r\n    }\r\n    // If reduced under zero > return remaining pixels\r\n    else if (tempPixelSize < 0) {\r\n      return {\r\n        areaSnapshot,\r\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\r\n        percentAfterAbsorption: -1,\r\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\r\n      };\r\n    }\r\n    return {\r\n      areaSnapshot,\r\n      pixelAbsorb: pixels,\r\n      percentAfterAbsorption: -1,\r\n      pixelRemain: 0,\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function updateAreaSize(unit: 'percent' | 'pixel', item: IAreaAbsorptionCapacity) {\r\n  if (unit === 'percent') {\r\n    item.areaSnapshot.area.size = item.percentAfterAbsorption;\r\n  } else if (unit === 'pixel') {\r\n    // Update size except for the wildcard size area\r\n    if (item.areaSnapshot.area.size !== null) {\r\n      item.areaSnapshot.area.size = item.areaSnapshot.sizePixelAtStart + item.pixelAbsorb;\r\n    }\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { IDefaultOptions } from './interface';\r\n\r\nexport const ANGULAR_SPLIT_DEFAULT_OPTIONS = new InjectionToken<Partial<IDefaultOptions>>('angular-split-global-config');\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Renderer2,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n  ElementRef,\r\n  NgZone,\r\n  ViewChildren,\r\n  QueryList,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  Inject,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { Observable, Subscriber, Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport {\r\n  IArea,\r\n  IPoint,\r\n  ISplitSnapshot,\r\n  IAreaSnapshot,\r\n  IOutputData,\r\n  IOutputAreaSizes,\r\n  IDefaultOptions,\r\n} from './interface';\r\nimport { SplitAreaDirective } from './split-area.directive';\r\nimport {\r\n  getInputPositiveNumber,\r\n  getInputBoolean,\r\n  getAreaMinSize,\r\n  getAreaMaxSize,\r\n  getPointFromEvent,\r\n  getElementPixelSize,\r\n  getGutterSideAbsorptionCapacity,\r\n  isUserSizesValid,\r\n  pointDeltaEquals,\r\n  updateAreaSize,\r\n  getKeyboardEndpoint,\r\n} from './utils';\r\nimport { ANGULAR_SPLIT_DEFAULT_OPTIONS } from './angular-split-config.token';\r\n\r\n/**\r\n * angular-split\r\n *\r\n *\r\n *  PERCENT MODE ([unit]=\"'percent'\")\r\n *  ___________________________________________________________________________________________\r\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\r\n * |-------------------------------------------------------------------------------------------|\r\n * |       20                 30                 20                 15                 15      | <-- [size]=\"x\"\r\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\r\n * |calc(20% - 8px)    calc(30% - 12px)   calc(20% - 8px)    calc(15% - 6px)    calc(15% - 6px)| <-- CSS flex-basis property (with flex-grow&shrink at 0)\r\n * |     152px              228px              152px              114px              114px     | <-- el.getBoundingClientRect().width\r\n * |___________________________________________________________________________________________|\r\n *                                                                                 800px         <-- el.getBoundingClientRect().width\r\n *  flex-basis = calc( { area.size }% - { area.size/100 * nbGutter*gutterSize }px );\r\n *\r\n *\r\n *  PIXEL MODE ([unit]=\"'pixel'\")\r\n *  ___________________________________________________________________________________________\r\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\r\n * |-------------------------------------------------------------------------------------------|\r\n * |      100                250                 *                 150                100      | <-- [size]=\"y\"\r\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\r\n * |   0 0 100px          0 0 250px           1 1 auto          0 0 150px          0 0 100px   | <-- CSS flex property (flex-grow/flex-shrink/flex-basis)\r\n * |     100px              250px              200px              150px              100px     | <-- el.getBoundingClientRect().width\r\n * |___________________________________________________________________________________________|\r\n *                                                                                 800px         <-- el.getBoundingClientRect().width\r\n *\r\n */\r\n\r\n@Component({\r\n  selector: 'as-split',\r\n  exportAs: 'asSplit',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./split.component.scss'],\r\n  template: ` <ng-content></ng-content>\r\n    <ng-template ngFor [ngForOf]=\"displayedAreas\" let-area=\"$implicit\" let-index=\"index\" let-last=\"last\">\r\n      <div\r\n        role=\"slider\"\r\n        tabindex=\"0\"\r\n        *ngIf=\"last === false\"\r\n        #gutterEls\r\n        class=\"as-split-gutter\"\r\n        [style.flex-basis.px]=\"gutterSize\"\r\n        [style.order]=\"index * 2 + 1\"\r\n        (keydown)=\"startKeyboardDrag($event, index * 2 + 1, index + 1)\"\r\n        (mousedown)=\"startMouseDrag($event, index * 2 + 1, index + 1)\"\r\n        (touchstart)=\"startMouseDrag($event, index * 2 + 1, index + 1)\"\r\n        (mouseup)=\"clickGutter($event, index + 1)\"\r\n        (touchend)=\"clickGutter($event, index + 1)\"\r\n        [attr.aria-label]=\"gutterAriaLabel\"\r\n        [attr.aria-orientation]=\"direction\"\r\n        [attr.aria-valuemin]=\"area.minSize\"\r\n        [attr.aria-valuemax]=\"area.maxSize\"\r\n        [attr.aria-valuenow]=\"area.size\"\r\n        [attr.aria-valuetext]=\"getAriaAreaSizeText(area.size)\"\r\n      >\r\n        <div class=\"as-split-gutter-icon\"></div>\r\n      </div>\r\n    </ng-template>`,\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class SplitComponent implements AfterViewInit, OnDestroy {\r\n  @Input() set direction(v: 'horizontal' | 'vertical') {\r\n    this._direction = v === 'vertical' ? 'vertical' : 'horizontal';\r\n\r\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._direction}`);\r\n    this.renderer.removeClass(\r\n      this.elRef.nativeElement,\r\n      `as-${this._direction === 'vertical' ? 'horizontal' : 'vertical'}`,\r\n    );\r\n\r\n    this.build(false, false);\r\n  }\r\n\r\n  get direction(): 'horizontal' | 'vertical' {\r\n    return this._direction;\r\n  }\r\n\r\n  @Input() set unit(v: 'percent' | 'pixel') {\r\n    this._unit = v === 'pixel' ? 'pixel' : 'percent';\r\n\r\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._unit}`);\r\n    this.renderer.removeClass(this.elRef.nativeElement, `as-${this._unit === 'pixel' ? 'percent' : 'pixel'}`);\r\n\r\n    this.build(false, true);\r\n  }\r\n\r\n  get unit(): 'percent' | 'pixel' {\r\n    return this._unit;\r\n  }\r\n\r\n  @Input() set gutterSize(v: number | null) {\r\n    this._gutterSize = getInputPositiveNumber(v, 11);\r\n\r\n    this.build(false, false);\r\n  }\r\n\r\n  get gutterSize(): number | null {\r\n    return this._gutterSize;\r\n  }\r\n\r\n  @Input() set gutterStep(v: number) {\r\n    this._gutterStep = getInputPositiveNumber(v, 1);\r\n  }\r\n\r\n  get gutterStep(): number {\r\n    return this._gutterStep;\r\n  }\r\n\r\n  @Input() set restrictMove(v: boolean) {\r\n    this._restrictMove = getInputBoolean(v);\r\n  }\r\n\r\n  get restrictMove(): boolean {\r\n    return this._restrictMove;\r\n  }\r\n\r\n  @Input() set useTransition(v: boolean) {\r\n    this._useTransition = getInputBoolean(v);\r\n\r\n    if (this._useTransition) {\r\n      this.renderer.addClass(this.elRef.nativeElement, 'as-transition');\r\n    } else {\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-transition');\r\n    }\r\n  }\r\n\r\n  get useTransition(): boolean {\r\n    return this._useTransition;\r\n  }\r\n\r\n  @Input() set disabled(v: boolean) {\r\n    this._disabled = getInputBoolean(v);\r\n\r\n    if (this._disabled) {\r\n      this.renderer.addClass(this.elRef.nativeElement, 'as-disabled');\r\n    } else {\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-disabled');\r\n    }\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  @Input() set dir(v: 'ltr' | 'rtl') {\r\n    this._dir = v === 'rtl' ? 'rtl' : 'ltr';\r\n\r\n    this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir);\r\n  }\r\n\r\n  get dir(): 'ltr' | 'rtl' {\r\n    return this._dir;\r\n  }\r\n\r\n  @Input() set gutterDblClickDuration(v: number) {\r\n    this._gutterDblClickDuration = getInputPositiveNumber(v, 0);\r\n  }\r\n  get gutterDblClickDuration(): number {\r\n    return this._gutterDblClickDuration;\r\n  }\r\n\r\n  @Input() gutterClickDeltaPx = 2;\r\n\r\n  @Input() gutterAriaLabel!: string;\r\n\r\n  @Output() get transitionEnd(): Observable<IOutputAreaSizes> {\r\n    return new Observable<IOutputAreaSizes>(\r\n      (subscriber: Subscriber<IOutputAreaSizes>) => (this.transitionEndSubscriber = subscriber),\r\n    ).pipe(debounceTime<IOutputAreaSizes>(20));\r\n  }\r\n\r\n  private _config: IDefaultOptions = {\r\n    direction: 'horizontal',\r\n    unit: 'percent',\r\n    gutterSize: 11,\r\n    gutterStep: 1,\r\n    restrictMove: false,\r\n    useTransition: false,\r\n    disabled: false,\r\n    dir: 'ltr',\r\n    gutterDblClickDuration: 0,\r\n  };\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private elRef: ElementRef,\r\n    private cdRef: ChangeDetectorRef,\r\n    private renderer: Renderer2,\r\n    @Optional() @Inject(ANGULAR_SPLIT_DEFAULT_OPTIONS) globalConfig: IDefaultOptions,\r\n  ) {\r\n    // To force adding default class, could be override by user @Input() or not\r\n    this.direction = this._direction;\r\n    this._config = globalConfig ? Object.assign(this._config, globalConfig) : this._config;\r\n\r\n    this.direction = this._config.direction;\r\n    this.unit = this._config.unit;\r\n    this.gutterSize = this._config.gutterSize;\r\n    this.gutterStep = this._config.gutterStep;\r\n    this.restrictMove = this._config.restrictMove;\r\n    this.useTransition = this._config.useTransition;\r\n    this.disabled =this._config.disabled;\r\n    this.dir = this._config.dir;\r\n    this.gutterDblClickDuration = this._config.gutterDblClickDuration;\r\n  }\r\n  private _direction!: 'horizontal' | 'vertical';\r\n  private _unit!: 'percent' | 'pixel';\r\n  private _gutterSize!: number | null;\r\n  private _gutterStep!: number;\r\n  private _restrictMove!: boolean;\r\n  private _useTransition!: boolean;\r\n  private _disabled!: boolean;\r\n  private _dir!: 'ltr' | 'rtl';\r\n  private _gutterDblClickDuration!: number;\r\n\r\n  @Output() dragStart = new EventEmitter<IOutputData>(false);\r\n  @Output() dragEnd = new EventEmitter<IOutputData>(false);\r\n  @Output() gutterClick = new EventEmitter<IOutputData>(false);\r\n  @Output() gutterDblClick = new EventEmitter<IOutputData>(false);\r\n\r\n  private transitionEndSubscriber!: Subscriber<IOutputAreaSizes>;\r\n\r\n  private dragProgressSubject: Subject<IOutputData> = new Subject();\r\n  dragProgress$: Observable<IOutputData> = this.dragProgressSubject.asObservable();\r\n\r\n  private isDragging = false;\r\n  private isWaitingClear = false;\r\n  private isWaitingInitialMove = false;\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  private dragListeners: Array<Function> = [];\r\n  private snapshot: ISplitSnapshot | null = null;\r\n  private startPoint: IPoint | null = null;\r\n  private endPoint: IPoint | null = null;\r\n\r\n  public readonly displayedAreas: Array<IArea> = [];\r\n  private readonly hiddenAreas: Array<IArea> = [];\r\n\r\n  @ViewChildren('gutterEls') private gutterEls!: QueryList<ElementRef>;\r\n\r\n  _clickTimeout: number | null = null;\r\n\r\n  public ngAfterViewInit() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      // To avoid transition at first rendering\r\n      setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'as-init'));\r\n    });\r\n  }\r\n\r\n  private getNbGutters(): number {\r\n    return this.displayedAreas.length === 0 ? 0 : this.displayedAreas.length - 1;\r\n  }\r\n\r\n  public addArea(component: SplitAreaDirective): void {\r\n    const newArea: IArea = {\r\n      component,\r\n      order: 0,\r\n      size: 0,\r\n      minSize: null,\r\n      maxSize: null,\r\n      sizeBeforeCollapse: null,\r\n      gutterBeforeCollapse: 0,\r\n    };\r\n\r\n    if (component.visible === true) {\r\n      this.displayedAreas.push(newArea);\r\n\r\n      this.build(true, true);\r\n    } else {\r\n      this.hiddenAreas.push(newArea);\r\n    }\r\n  }\r\n\r\n  public removeArea(component: SplitAreaDirective): void {\r\n    if (this.displayedAreas.some((a) => a.component === component)) {\r\n      const area = this.displayedAreas.find((a) => a.component === component);\r\n      if (area) this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\r\n\r\n      this.build(true, true);\r\n    } else if (this.hiddenAreas.some((a) => a.component === component)) {\r\n      const area = this.hiddenAreas.find((a) => a.component === component);\r\n      if (area) this.hiddenAreas.splice(this.hiddenAreas.indexOf(area), 1);\r\n    }\r\n  }\r\n\r\n  public updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void {\r\n    if (component.visible === true) {\r\n      this.build(resetOrders, resetSizes);\r\n    }\r\n  }\r\n\r\n  public showArea(component: SplitAreaDirective): void {\r\n    const area = this.hiddenAreas.find((a) => a.component === component);\r\n    if (area === undefined) {\r\n      return;\r\n    }\r\n\r\n    const areas = this.hiddenAreas.splice(this.hiddenAreas.indexOf(area), 1);\r\n    this.displayedAreas.push(...areas);\r\n\r\n    this.build(true, true);\r\n  }\r\n\r\n  public hideArea(comp: SplitAreaDirective): void {\r\n    const area = this.displayedAreas.find((a) => a.component === comp);\r\n    if (area === undefined) {\r\n      return;\r\n    }\r\n\r\n    const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\r\n    areas.forEach((item) => {\r\n      item.order = 0;\r\n      item.size = 0;\r\n    });\r\n    this.hiddenAreas.push(...areas);\r\n\r\n    this.build(true, true);\r\n  }\r\n\r\n  public getVisibleAreaSizes(): IOutputAreaSizes {\r\n    return this.displayedAreas.map((a) => (a.size === null ? '*' : a.size));\r\n  }\r\n\r\n  public setVisibleAreaSizes(sizes: IOutputAreaSizes): boolean {\r\n    if (sizes.length !== this.displayedAreas.length) {\r\n      return false;\r\n    }\r\n\r\n    const formattedSizes = sizes.map((s) => getInputPositiveNumber(s, null));\r\n    const isValid = isUserSizesValid(this.unit, formattedSizes);\r\n\r\n    if (isValid === false) {\r\n      return false;\r\n    }\r\n\r\n    this.displayedAreas.forEach(\r\n      (area, i) => {\r\n        area.component.size = formattedSizes[i]; // setSize()._size\r\n      }\r\n    );\r\n    this.build(false, true);\r\n    return true;\r\n  }\r\n\r\n  private build(resetOrders: boolean, resetSizes: boolean): void {\r\n    this.stopDragging();\r\n\r\n    // ¤ AREAS ORDER\r\n\r\n    if (resetOrders === true) {\r\n      // If user provided 'order' for each area, use it to sort them.\r\n      if (this.displayedAreas.every((a) => a.component.order !== null)) {\r\n        this.displayedAreas.sort((a, b) => <number>a.component.order - <number>b.component.order);\r\n      }\r\n\r\n      // Then set real order with multiples of 2, numbers between will be used by gutters.\r\n      this.displayedAreas.forEach((area, i) => {\r\n        area.order = i * 2;\r\n        area.component.setStyleOrder(area.order);\r\n      });\r\n    }\r\n\r\n    // ¤ AREAS SIZE\r\n\r\n    if (resetSizes === true) {\r\n      const useUserSizes = isUserSizesValid(\r\n        this.unit,\r\n        this.displayedAreas.map((a) => a.component.size),\r\n      );\r\n\r\n      switch (this.unit) {\r\n        case 'percent': {\r\n          const defaultSize = 100 / this.displayedAreas.length;\r\n\r\n          this.displayedAreas.forEach((area) => {\r\n            area.size = useUserSizes ? <number>area.component.size : defaultSize;\r\n            area.minSize = getAreaMinSize(area);\r\n            area.maxSize = getAreaMaxSize(area);\r\n          });\r\n          break;\r\n        }\r\n        case 'pixel': {\r\n          if (useUserSizes) {\r\n            this.displayedAreas.forEach((area) => {\r\n              area.size = area.component.size;\r\n              area.minSize = getAreaMinSize(area);\r\n              area.maxSize = getAreaMaxSize(area);\r\n            });\r\n          } else {\r\n            const wildcardSizeAreas = this.displayedAreas.filter((a) => a.component.size === null);\r\n\r\n            // No wildcard area > Need to select one arbitrarily > first\r\n            if (wildcardSizeAreas.length === 0 && this.displayedAreas.length > 0) {\r\n              this.displayedAreas.forEach((area, i) => {\r\n                area.size = i === 0 ? null : area.component.size;\r\n                area.minSize = i === 0 ? null : getAreaMinSize(area);\r\n                area.maxSize = i === 0 ? null : getAreaMaxSize(area);\r\n              });\r\n            } else if (wildcardSizeAreas.length > 1) {\r\n              // More than one wildcard area > Need to keep only one arbitrarily > first\r\n              let alreadyGotOne = false;\r\n              this.displayedAreas.forEach((area) => {\r\n                if (area.component.size === null) {\r\n                  if (alreadyGotOne === false) {\r\n                    area.size = null;\r\n                    area.minSize = null;\r\n                    area.maxSize = null;\r\n                    alreadyGotOne = true;\r\n                  } else {\r\n                    area.size = 100;\r\n                    area.minSize = null;\r\n                    area.maxSize = null;\r\n                  }\r\n                } else {\r\n                  area.size = area.component.size;\r\n                  area.minSize = getAreaMinSize(area);\r\n                  area.maxSize = getAreaMaxSize(area);\r\n                }\r\n              });\r\n            }\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.refreshStyleSizes();\r\n    this.cdRef.markForCheck();\r\n  }\r\n\r\n  private refreshStyleSizes(): void {\r\n    ///////////////////////////////////////////\r\n    // PERCENT MODE\r\n    if (this.unit === 'percent') {\r\n      // Only one area > flex-basis 100%\r\n      if (this.displayedAreas.length === 1) {\r\n        this.displayedAreas[0].component.setStyleFlex(0, 0, '100%', false, false);\r\n      } else {\r\n        // Multiple areas > use each percent basis\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const sumGutterSize = this.getNbGutters() * this.gutterSize!;\r\n\r\n        this.displayedAreas.forEach((area) => {\r\n          area.component.setStyleFlex(\r\n            0,\r\n            0,\r\n            `calc( ${area.size}% - ${(<number>area.size / 100) * sumGutterSize}px )`,\r\n            area.minSize !== null && area.minSize === area.size,\r\n            area.maxSize !== null && area.maxSize === area.size,\r\n          );\r\n        });\r\n      }\r\n    } else if (this.unit === 'pixel') {\r\n      ///////////////////////////////////////////\r\n      // PIXEL MODE\r\n      this.displayedAreas.forEach((area) => {\r\n        // Area with wildcard size\r\n        if (area.size === null) {\r\n          if (this.displayedAreas.length === 1) {\r\n            area.component.setStyleFlex(1, 1, '100%', false, false);\r\n          } else {\r\n            area.component.setStyleFlex(1, 1, 'auto', false, false);\r\n          }\r\n        } else {\r\n          // Area with pixel size\r\n          // Only one area > flex-basis 100%\r\n          if (this.displayedAreas.length === 1) {\r\n            area.component.setStyleFlex(0, 0, '100%', false, false);\r\n          } else {\r\n            // Multiple areas > use each pixel basis\r\n            area.component.setStyleFlex(\r\n              0,\r\n              0,\r\n              `${area.size}px`,\r\n              area.minSize !== null && area.minSize === area.size,\r\n              area.maxSize !== null && area.maxSize === area.size,\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public clickGutter(event: MouseEvent | TouchEvent, gutterNum: number): void {\r\n    const tempPoint = getPointFromEvent(event);\r\n\r\n    // Be sure mouseup/touchend happened if touch/cursor is not moved.\r\n    if (\r\n      this.startPoint &&\r\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      pointDeltaEquals(this.startPoint, tempPoint!, this.gutterClickDeltaPx) &&\r\n      (!this.isDragging || this.isWaitingInitialMove)\r\n    ) {\r\n      // If timeout in progress and new click > clearTimeout & dblClickEvent\r\n      if (this._clickTimeout !== null) {\r\n        window.clearTimeout(this._clickTimeout);\r\n        this._clickTimeout = null;\r\n        this.notify('dblclick', gutterNum);\r\n        this.stopDragging();\r\n      } else {\r\n        // Else start timeout to call clickEvent at end\r\n        this._clickTimeout = window.setTimeout(() => {\r\n          this._clickTimeout = null;\r\n          this.notify('click', gutterNum);\r\n          this.stopDragging();\r\n        }, this.gutterDblClickDuration);\r\n      }\r\n    }\r\n  }\r\n\r\n  public startKeyboardDrag(event: KeyboardEvent, gutterOrder: number, gutterNum: number) {\r\n    if (this.disabled === true || this.isWaitingClear === true) {\r\n      return;\r\n    }\r\n\r\n    const endPoint = getKeyboardEndpoint(event, this.direction);\r\n    if (endPoint === null) {\r\n      return;\r\n    }\r\n    this.endPoint = endPoint;\r\n    this.startPoint = getPointFromEvent(event);\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.setupForDragEvent(gutterOrder, gutterNum);\r\n    this.startDragging();\r\n    this.drag();\r\n    this.stopDragging();\r\n  }\r\n\r\n  public startMouseDrag(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.startPoint = getPointFromEvent(event);\r\n    if (this.startPoint === null || this.disabled === true || this.isWaitingClear === true) {\r\n      return;\r\n    }\r\n\r\n    this.setupForDragEvent(gutterOrder, gutterNum);\r\n\r\n    this.dragListeners.push(this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)));\r\n    this.dragListeners.push(this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)));\r\n    this.dragListeners.push(this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)));\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.dragListeners.push(this.renderer.listen('document', 'mousemove', this.mouseDragEvent.bind(this)));\r\n      this.dragListeners.push(this.renderer.listen('document', 'touchmove', this.mouseDragEvent.bind(this)));\r\n    });\r\n\r\n    this.startDragging();\r\n  }\r\n\r\n  private setupForDragEvent(gutterOrder: number, gutterNum: number) {\r\n    this.snapshot = {\r\n      gutterNum,\r\n      lastSteppedOffset: 0,\r\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      allAreasSizePixel: getElementPixelSize(this.elRef, this.direction) - this.getNbGutters() * this.gutterSize!,\r\n      allInvolvedAreasSizePercent: 100,\r\n      areasBeforeGutter: [],\r\n      areasAfterGutter: [],\r\n    };\r\n\r\n    this.displayedAreas.forEach((area) => {\r\n      if (area === null) return;\r\n      const areaSnapshot: IAreaSnapshot = {\r\n        area,\r\n        sizePixelAtStart: getElementPixelSize(area.component.elRef, this.direction),\r\n        sizePercentAtStart: this.unit === 'percent' ? (area.size ?? -1) : -1, // If pixel mode, anyway, will not be used.\r\n      };\r\n\r\n      if (this.snapshot === null) return;\r\n      if (area.order < gutterOrder) {\r\n\r\n        if (this.restrictMove === true) {\r\n          this.snapshot.areasBeforeGutter = [areaSnapshot];\r\n        } else {\r\n          this.snapshot.areasBeforeGutter.unshift(areaSnapshot);\r\n        }\r\n\r\n      } else if (area.order > gutterOrder) {\r\n        if (this.restrictMove === true) {\r\n          if (this.snapshot.areasAfterGutter.length === 0) {\r\n            this.snapshot.areasAfterGutter = [areaSnapshot];\r\n          }\r\n        } else {\r\n          this.snapshot.areasAfterGutter.push(areaSnapshot);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.snapshot.allInvolvedAreasSizePercent = [\r\n      ...this.snapshot.areasBeforeGutter,\r\n      ...this.snapshot.areasAfterGutter,\r\n    ].reduce((t, a) => t + a.sizePercentAtStart, 0);\r\n\r\n    if (this.snapshot.areasBeforeGutter.length === 0 || this.snapshot.areasAfterGutter.length === 0) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  private startDragging() {\r\n    this.displayedAreas.forEach((area) => area.component.lockEvents());\r\n\r\n    this.isDragging = true;\r\n    this.isWaitingInitialMove = true;\r\n  }\r\n\r\n  private mouseDragEvent(event: MouseEvent | TouchEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const tempPoint = getPointFromEvent(event);\r\n    if (this._clickTimeout !== null && this.startPoint !== null && tempPoint !== null) {\r\n      if (!pointDeltaEquals(this.startPoint, tempPoint, this.gutterClickDeltaPx)) {\r\n        window.clearTimeout(this._clickTimeout);\r\n        this._clickTimeout = null;\r\n      }\r\n    }\r\n\r\n    if (this.isDragging === false) {\r\n      return;\r\n    }\r\n\r\n    this.endPoint = getPointFromEvent(event);\r\n    if (this.endPoint === null) {\r\n      return;\r\n    }\r\n\r\n    this.drag();\r\n  }\r\n\r\n  private drag() {\r\n    if (this.isWaitingInitialMove) {\r\n      if (this.startPoint !== null && this.endPoint !== null) {\r\n        if (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y) {\r\n          this.ngZone.run(() => {\r\n            this.isWaitingInitialMove = false;\r\n\r\n            this.renderer.addClass(this.elRef.nativeElement, 'as-dragging');\r\n            if (this.snapshot !== null) {\r\n              this.renderer.addClass(this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement, 'as-dragged');\r\n              this.notify('start', this.snapshot.gutterNum);\r\n            }\r\n          });\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Calculate steppedOffset\r\n\r\n    let offset =\r\n      this.startPoint === null || this.endPoint === null ? 0 :\r\n      this.direction === 'horizontal' ? this.startPoint.x - this.endPoint.x : this.startPoint.y - this.endPoint.y;\r\n\r\n    // RTL requires negative offset only in horizontal mode as in vertical\r\n    // RTL has no effect on drag direction.\r\n    if (this.dir === 'rtl' && this.direction === 'horizontal') {\r\n      offset = -offset;\r\n    }\r\n\r\n    const steppedOffset = Math.round(offset / this.gutterStep) * this.gutterStep;\r\n\r\n    if (this.snapshot === null) return;\r\n\r\n    if (steppedOffset === this.snapshot.lastSteppedOffset) {\r\n      return;\r\n    }\r\n\r\n    this.snapshot.lastSteppedOffset = steppedOffset;\r\n\r\n    // Need to know if each gutter side areas could reacts to steppedOffset\r\n\r\n    let areasBefore = getGutterSideAbsorptionCapacity(\r\n      this.unit,\r\n      this.snapshot.areasBeforeGutter,\r\n      -steppedOffset,\r\n      this.snapshot.allAreasSizePixel,\r\n    );\r\n    let areasAfter = getGutterSideAbsorptionCapacity(\r\n      this.unit,\r\n      this.snapshot.areasAfterGutter,\r\n      steppedOffset,\r\n      this.snapshot.allAreasSizePixel,\r\n    );\r\n\r\n    // Each gutter side areas can't absorb all offset\r\n    if (areasBefore.remain !== 0 && areasAfter.remain !== 0) {\r\n      if (Math.abs(areasBefore.remain) === Math.abs(areasAfter.remain)) {\r\n      } else if (Math.abs(areasBefore.remain) > Math.abs(areasAfter.remain)) {\r\n        areasAfter = getGutterSideAbsorptionCapacity(\r\n          this.unit,\r\n          this.snapshot.areasAfterGutter,\r\n          steppedOffset + areasBefore.remain,\r\n          this.snapshot.allAreasSizePixel,\r\n        );\r\n      } else {\r\n        areasBefore = getGutterSideAbsorptionCapacity(\r\n          this.unit,\r\n          this.snapshot.areasBeforeGutter,\r\n          -(steppedOffset - areasAfter.remain),\r\n          this.snapshot.allAreasSizePixel,\r\n        );\r\n      }\r\n    } else if (areasBefore.remain !== 0) {\r\n      // Areas before gutter can't absorbs all offset > need to recalculate sizes for areas after gutter.\r\n      areasAfter = getGutterSideAbsorptionCapacity(\r\n        this.unit,\r\n        this.snapshot.areasAfterGutter,\r\n        steppedOffset + areasBefore.remain,\r\n        this.snapshot.allAreasSizePixel,\r\n      );\r\n    } else if (areasAfter.remain !== 0) {\r\n      // Areas after gutter can't absorbs all offset > need to recalculate sizes for areas before gutter.\r\n      areasBefore = getGutterSideAbsorptionCapacity(\r\n        this.unit,\r\n        this.snapshot.areasBeforeGutter,\r\n        -(steppedOffset - areasAfter.remain),\r\n        this.snapshot.allAreasSizePixel,\r\n      );\r\n    }\r\n\r\n    if (this.unit === 'percent') {\r\n      // Hack because of browser messing up with sizes using calc(X% - Ypx) -> el.getBoundingClientRect()\r\n      // If not there, playing with gutters makes total going down to 99.99875% then 99.99286%, 99.98986%,..\r\n      const all = [...areasBefore.list, ...areasAfter.list];\r\n      const areaToReset = all.find(\r\n        (a) =>\r\n          a.percentAfterAbsorption !== 0 &&\r\n          a.percentAfterAbsorption !== a.areaSnapshot.area.minSize &&\r\n          a.percentAfterAbsorption !== a.areaSnapshot.area.maxSize,\r\n      );\r\n\r\n      if (areaToReset) {\r\n        areaToReset.percentAfterAbsorption =\r\n          this.snapshot.allInvolvedAreasSizePercent -\r\n          all.filter((a) => a !== areaToReset).reduce((total, a) => total + a.percentAfterAbsorption, 0);\r\n      }\r\n    }\r\n\r\n    // Now we know areas could absorb steppedOffset, time to really update sizes\r\n\r\n    areasBefore.list.forEach((item) => updateAreaSize(this.unit, item));\r\n    areasAfter.list.forEach((item) => updateAreaSize(this.unit, item));\r\n\r\n    this.refreshStyleSizes();\r\n    this.notify('progress', this.snapshot.gutterNum);\r\n  }\r\n\r\n  private stopDragging(event?: Event): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    if (this.isDragging === false) {\r\n      return;\r\n    }\r\n\r\n    this.displayedAreas.forEach((area) => area.component.unlockEvents());\r\n\r\n    while (this.dragListeners.length > 0) {\r\n      const fct = this.dragListeners.pop();\r\n      if (fct) {\r\n        fct();\r\n      }\r\n    }\r\n\r\n    // Warning: Have to be before \"notify('end')\"\r\n    // because \"notify('end')\"\" can be linked to \"[size]='x'\" > \"build()\" > \"stopDragging()\"\r\n    this.isDragging = false;\r\n\r\n    // If moved from starting point, notify end\r\n    if (this.isWaitingInitialMove === false) {\r\n      if (this.snapshot !== null) {\r\n        this.notify('end', this.snapshot.gutterNum);\r\n      }\r\n    }\r\n\r\n    this.renderer.removeClass(this.elRef.nativeElement, 'as-dragging');\r\n    if (this.snapshot !== null) {\r\n      this.renderer.removeClass(this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement, 'as-dragged');\r\n    }\r\n    this.snapshot = null;\r\n    this.isWaitingClear = true;\r\n\r\n    // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\r\n    this.ngZone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        this.startPoint = null;\r\n        this.endPoint = null;\r\n        this.isWaitingClear = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  public notify(type: 'start' | 'progress' | 'end' | 'click' | 'dblclick' | 'transitionEnd', gutterNum: number): void {\r\n    const sizes = this.getVisibleAreaSizes();\r\n\r\n    if (type === 'start') {\r\n      this.dragStart.emit({ gutterNum, sizes });\r\n    } else if (type === 'end') {\r\n      this.dragEnd.emit({ gutterNum, sizes });\r\n    } else if (type === 'click') {\r\n      this.gutterClick.emit({ gutterNum, sizes });\r\n    } else if (type === 'dblclick') {\r\n      this.gutterDblClick.emit({ gutterNum, sizes });\r\n    } else if (type === 'transitionEnd') {\r\n      if (this.transitionEndSubscriber) {\r\n        this.ngZone.run(() => this.transitionEndSubscriber.next(sizes));\r\n      }\r\n    } else if (type === 'progress') {\r\n      // Stay outside zone to allow users do what they want about change detection mechanism.\r\n      this.dragProgressSubject.next({ gutterNum, sizes });\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.stopDragging();\r\n  }\r\n\r\n  public collapseArea(comp: SplitAreaDirective, newSize: number, gutter: 'left' | 'right'): void {\r\n    const area = this.displayedAreas.find((a) => a.component === comp);\r\n    if (area === undefined) {\r\n      return;\r\n    }\r\n    const whichGutter = gutter === 'right' ? 1 : -1;\r\n    if (!area.sizeBeforeCollapse) {\r\n      area.sizeBeforeCollapse = area.size;\r\n      area.gutterBeforeCollapse = whichGutter;\r\n    }\r\n    area.size = newSize;\r\n    const gtr = this.gutterEls.find((f) => f.nativeElement.style.order === `${area.order + whichGutter}`);\r\n    if (gtr) {\r\n      this.renderer.addClass(gtr.nativeElement, 'as-split-gutter-collapsed');\r\n    }\r\n    this.updateArea(comp, false, false);\r\n  }\r\n\r\n  public expandArea(comp: SplitAreaDirective): void {\r\n    const area = this.displayedAreas.find((a) => a.component === comp);\r\n    if (area === undefined) {\r\n      return;\r\n    }\r\n    if (!area.sizeBeforeCollapse) {\r\n      return;\r\n    }\r\n    area.size = area.sizeBeforeCollapse;\r\n    area.sizeBeforeCollapse = null;\r\n    const gtr = this.gutterEls.find((f) => f.nativeElement.style.order === `${area.order + area.gutterBeforeCollapse}`);\r\n    if (gtr) {\r\n      this.renderer.removeClass(gtr.nativeElement, 'as-split-gutter-collapsed');\r\n    }\r\n    this.updateArea(comp, false, false);\r\n  }\r\n\r\n  public getAriaAreaSizeText(size: number | null): string | null {\r\n    if (size === null) {\r\n      return null;\r\n    }\r\n\r\n    return size.toFixed(0) + ' ' + this.unit;\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\n\r\nimport { SplitComponent } from './split.component';\r\nimport { getInputBoolean, getInputPositiveNumber } from './utils';\r\n\r\n@Directive({\r\n  // eslint-disable-next-line @angular-eslint/directive-selector\r\n  selector: 'as-split-area, [as-split-area]',\r\n  exportAs: 'asSplitArea',\r\n})\r\nexport class SplitAreaDirective implements OnInit, OnDestroy {\r\n  private _order: number | null = null;\r\n\r\n  @Input() set order(v: number | null) {\r\n    this._order = getInputPositiveNumber(v, null);\r\n\r\n    this.split.updateArea(this, true, false);\r\n  }\r\n\r\n  get order(): number | null {\r\n    return this._order;\r\n  }\r\n\r\n  private _size: number | null = null;\r\n\r\n  @Input() set size(v: number | null) {\r\n    this._size = getInputPositiveNumber(v, null);\r\n\r\n    this.split.updateArea(this, false, true);\r\n  }\r\n\r\n  get size(): number | null {\r\n    return this._size;\r\n  }\r\n\r\n  private _minSize: number | null = null;\r\n\r\n  @Input() set minSize(v: number | null) {\r\n    this._minSize = getInputPositiveNumber(v, null);\r\n\r\n    this.split.updateArea(this, false, true);\r\n  }\r\n\r\n  get minSize(): number | null {\r\n    return this._minSize;\r\n  }\r\n\r\n  private _maxSize: number | null = null;\r\n\r\n  @Input() set maxSize(v: number | null) {\r\n    this._maxSize = getInputPositiveNumber(v, null);\r\n\r\n    this.split.updateArea(this, false, true);\r\n  }\r\n\r\n  get maxSize(): number | null {\r\n    return this._maxSize;\r\n  }\r\n\r\n  private _lockSize = false;\r\n\r\n  @Input() set lockSize(v: boolean) {\r\n    this._lockSize = getInputBoolean(v);\r\n\r\n    this.split.updateArea(this, false, true);\r\n  }\r\n\r\n  get lockSize(): boolean {\r\n    return this._lockSize;\r\n  }\r\n\r\n  private _visible = true;\r\n\r\n  @Input() set visible(v: boolean) {\r\n    this._visible = getInputBoolean(v);\r\n\r\n    if (this._visible) {\r\n      this.split.showArea(this);\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-hidden');\r\n    } else {\r\n      this.split.hideArea(this);\r\n      this.renderer.addClass(this.elRef.nativeElement, 'as-hidden');\r\n    }\r\n  }\r\n\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  private transitionListener!: Function;\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  private readonly lockListeners: Array<Function> = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    public elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private split: SplitComponent,\r\n  ) {\r\n    this.renderer.addClass(this.elRef.nativeElement, 'as-split-area');\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.split.addArea(this);\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.transitionListener = this.renderer.listen(\r\n        this.elRef.nativeElement,\r\n        'transitionend',\r\n        (event: TransitionEvent) => {\r\n          // Limit only flex-basis transition to trigger the event\r\n          if (event.propertyName === 'flex-basis') {\r\n            this.split.notify('transitionEnd', -1);\r\n          }\r\n        },\r\n      );\r\n    });\r\n  }\r\n\r\n  public setStyleOrder(value: number): void {\r\n    this.renderer.setStyle(this.elRef.nativeElement, 'order', value);\r\n  }\r\n\r\n  public setStyleFlex(grow: number, shrink: number, basis: string, isMin: boolean, isMax: boolean): void {\r\n    // Need 3 separated properties to work on IE11 (https://github.com/angular/flex-layout/issues/323)\r\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-grow', grow);\r\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-shrink', shrink);\r\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', basis);\r\n\r\n    if (isMin === true) {\r\n      this.renderer.addClass(this.elRef.nativeElement, 'as-min');\r\n    } else {\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-min');\r\n    }\r\n\r\n    if (isMax === true) {\r\n      this.renderer.addClass(this.elRef.nativeElement, 'as-max');\r\n    } else {\r\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-max');\r\n    }\r\n  }\r\n\r\n  public lockEvents(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'selectstart', () => false));\r\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'dragstart', () => false));\r\n    });\r\n  }\r\n\r\n  public unlockEvents(): void {\r\n    while (this.lockListeners.length > 0) {\r\n      const fct = this.lockListeners.pop();\r\n      if (fct) {\r\n        fct();\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.unlockEvents();\r\n\r\n    if (this.transitionListener) {\r\n      this.transitionListener();\r\n    }\r\n\r\n    this.split.removeArea(this);\r\n  }\r\n\r\n  public collapse(newSize = 0, gutter: 'left' | 'right' = 'right'): void {\r\n    this.split.collapseArea(this, newSize, gutter);\r\n  }\r\n\r\n  public expand(): void {\r\n    this.split.expandArea(this);\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n/**\r\n * Directive for providing a custom no entries found element.\r\n * e.g.\r\n * <ngx-mat-select-search [formControl]=\"bankFilterCtrl\">\r\n *   <span ngxMatSelectNoEntriesFound>\r\n *     No entries found <button>Add</button>\r\n *   </span>\r\n * </ngx-mat-select-search>\r\n */\r\n@Directive({\r\n  selector: '[ngxMatSelectNoEntriesFound]'\r\n})\r\nexport class MatSelectNoEntriesFoundDirective {}\r\n","import { Directive } from '@angular/core';\r\n\r\n/**\r\n * Directive for providing a custom clear-icon.\r\n * e.g.\r\n * <ngx-mat-select-search [formControl]=\"bankFilterCtrl\">\r\n *   <mat-icon ngxMatSelectSearchClear>delete</mat-icon>\r\n * </ngx-mat-select-search>\r\n */\r\n@Directive({\r\n    selector: '[ngxMatSelectSearchClear]'\r\n})\r\nexport class MatSelectSearchClearDirective {}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { MatSelectSearchComponent } from './mat-select-search.component';\r\n\r\n/** List of inputs of NgxMatSelectSearchComponent that can be configured with a global default. */\r\nexport const configurableDefaultOptions = [\r\n  'ariaLabel',\r\n  'clearSearchInput',\r\n  'closeIcon',\r\n  'closeSvgIcon',\r\n  'disableInitialFocus',\r\n  'disableScrollToActiveOnOptionsChanged',\r\n  'enableClearOnEscapePressed',\r\n  'hideClearSearchButton',\r\n  'noEntriesFoundLabel',\r\n  'placeholderLabel',\r\n  'preventHomeEndKeyPropagation',\r\n  'searching',\r\n] as const;\r\n\r\nexport type ConfigurableDefaultOptions = typeof configurableDefaultOptions[number];\r\n\r\n/**\r\n * InjectionToken that can be used to specify global options. e.g.\r\n *\r\n * ```typescript\r\n * providers: [\r\n *   {\r\n *     provide: MAT_SELECTSEARCH_DEFAULT_OPTIONS,\r\n *     useValue: <MatSelectSearchOptions>{\r\n *       closeIcon: 'delete',\r\n *       noEntriesFoundLabel: 'No options found'\r\n *     }\r\n *   }\r\n * ]\r\n * ```\r\n *\r\n * See the corresponding inputs of `MatSelectSearchComponent` for documentation.\r\n */\r\nexport const MAT_SELECTSEARCH_DEFAULT_OPTIONS = new InjectionToken<MatSelectSearchOptions>('mat-selectsearch-default-options');\r\n\r\n/** Global configurable options for MatSelectSearch. */\r\nexport type MatSelectSearchOptions = Readonly<Partial<Pick<MatSelectSearchComponent, ConfigurableDefaultOptions>>>;\r\n","/**\r\n * Copyright (c) 2018 Bithost GmbH All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { A, DOWN_ARROW, END, ENTER, ESCAPE, HOME, NINE, SPACE, UP_ARROW, Z, ZERO } from '@angular/cdk/keycodes';\r\nimport { ViewportRuler } from '@angular/cdk/scrolling';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  Host,\r\n  SkipSelf\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MatLegacyOption } from '@angular/material/legacy-core';\r\n\r\n\r\n// import { MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field';\r\nimport { MatLegacyFormField as MatFormField } from '@angular/material/legacy-form-field';\r\nimport { MatLegacySelect  } from '@angular/material/legacy-select';\r\n\r\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\r\nimport { delay, filter, map, startWith, switchMap, take, takeUntil, tap } from 'rxjs/operators';\r\nimport { MatSelectSearchClearDirective } from './mat-select-search-clear.directive';\r\nimport { configurableDefaultOptions, MAT_SELECTSEARCH_DEFAULT_OPTIONS, MatSelectSearchOptions } from './default-options';\r\nimport { MatSelectNoEntriesFoundDirective } from './mat-select-no-entries-found.directive';\r\n\r\n/* tslint:disable:member-ordering component-selector */\r\n/**\r\n * Component providing an input field for searching MatLegacySelect options.\r\n *\r\n * Example usage:\r\n *\r\n * interface Bank {\r\n *  id: string;\r\n *  name: string;\r\n * }\r\n *\r\n * @Component({\r\n *   selector: 'my-app-data-selection',\r\n *   template: `\r\n *     <mat-form-field>\r\n *       <mat-select [formControl]=\"bankCtrl\" placeholder=\"Bank\">\r\n *         <mat-option>\r\n *           <ngx-mat-select-search [formControl]=\"bankFilterCtrl\"></ngx-mat-select-search>\r\n *         </mat-option>\r\n *         <mat-option *ngFor=\"let bank of filteredBanks | async\" [value]=\"bank.id\">\r\n *           {{bank.name}}\r\n *         </mat-option>\r\n *       </mat-select>\r\n *     </mat-form-field>\r\n *   `\r\n * })\r\n * export class DataSelectionComponent implements OnInit, OnDestroy {\r\n *\r\n *   // control for the selected bank\r\n *   public bankCtrl: FormControl = new FormControl();\r\n *   // control for the MatLegacySelect filter keyword\r\n *   public bankFilterCtrl: FormControl = new FormControl();\r\n *\r\n *   // list of banks\r\n *   private banks: Bank[] = [{name: 'Bank A', id: 'A'}, {name: 'Bank B', id: 'B'}, {name: 'Bank C', id: 'C'}];\r\n *   // list of banks filtered by search keyword\r\n *   public filteredBanks: ReplaySubject<Bank[]> = new ReplaySubject<Bank[]>(1);\r\n *\r\n *   // Subject that emits when the component has been destroyed.\r\n *   private _onDestroy = new Subject<void>();\r\n *\r\n *\r\n *   ngOnInit() {\r\n *     // load the initial bank list\r\n *     this.filteredBanks.next(this.banks.slice());\r\n *     // listen for search field value changes\r\n *     this.bankFilterCtrl.valueChanges\r\n *       .pipe(takeUntil(this._onDestroy))\r\n *       .subscribe(() => {\r\n *         this.filterBanks();\r\n *       });\r\n *   }\r\n *\r\n *   ngOnDestroy() {\r\n *     this._onDestroy.next();\r\n *     this._onDestroy.complete();\r\n *   }\r\n *\r\n *   private filterBanks() {\r\n *     if (!this.banks) {\r\n *       return;\r\n *     }\r\n *\r\n *     // get the search keyword\r\n *     let search = this.bankFilterCtrl.value;\r\n *     if (!search) {\r\n *       this.filteredBanks.next(this.banks.slice());\r\n *       return;\r\n *     } else {\r\n *       search = search.toLowerCase();\r\n *     }\r\n *\r\n *     // filter the banks\r\n *     this.filteredBanks.next(\r\n *       this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)\r\n *     );\r\n *   }\r\n * }\r\n */\r\n@Component({\r\n  selector: 'ngx-mat-select-search',\r\n  templateUrl: './mat-select-search.component.html',\r\n  styleUrls: ['./mat-select-search.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MatSelectSearchComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatSelectSearchComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n\r\n  /** Label of the search placeholder */\r\n  @Input() placeholderLabel = 'Suche';\r\n\r\n  /** Type of the search input field */\r\n  @Input() type = 'text';\r\n\r\n  /** Font-based icon used for displaying Close-Icon */\r\n  @Input() closeIcon = 'close';\r\n\r\n  /** Svg-based icon used for displaying Close-Icon. If set, closeIcon is overridden */\r\n  @Input() closeSvgIcon?: string;\r\n\r\n  /** Label to be shown when no entries are found. Set to null if no message should be shown. */\r\n  @Input() noEntriesFoundLabel = 'Keine Optionen gefunden';\r\n\r\n  /**\r\n    * Whether or not the search field should be cleared after the dropdown menu is closed.\r\n    * Useful for server-side filtering. See [#3](https://github.com/bithost-gmbh/ngx-mat-select-search/issues/3)\r\n    */\r\n  @Input() clearSearchInput = true;\r\n\r\n  /** Whether to show the search-in-progress indicator */\r\n  @Input() searching = false;\r\n\r\n  /** Disables initial focusing of the input field */\r\n  @Input() disableInitialFocus = false;\r\n\r\n  /** Enable clear input on escape pressed */\r\n  @Input() enableClearOnEscapePressed = false;\r\n\r\n  /**\r\n   * Prevents home / end key being propagated to mat-select,\r\n   * allowing to move the cursor within the search input instead of navigating the options\r\n   */\r\n  @Input() preventHomeEndKeyPropagation = false;\r\n\r\n  /** Disables scrolling to active options when option list changes. Useful for server-side search */\r\n  @Input() disableScrollToActiveOnOptionsChanged = false;\r\n\r\n  /** Adds 508 screen reader support for search box */\r\n  @Input() ariaLabel = 'dropdown search';\r\n\r\n  /** Whether to show Select All Checkbox (for mat-select[multi=true]) */\r\n  @Input() showToggleAllCheckbox = false;\r\n\r\n  /** select all checkbox checked state */\r\n  @Input() toggleAllCheckboxChecked = false;\r\n\r\n  /** select all checkbox indeterminate state */\r\n  @Input() toggleAllCheckboxIndeterminate = false;\r\n\r\n  /** Display a message in a tooltip on the toggle-all checkbox */\r\n  @Input() toggleAllCheckboxTooltipMessage = '';\r\n\r\n  /** Define the position of the tooltip on the toggle-all checkbox. */\r\n  @Input() toggleAllCheckboxTooltipPosition: 'left' | 'right' | 'above' | 'below' | 'before' | 'after' = 'below';\r\n\r\n  /** Show/Hide the search clear button of the search input */\r\n  @Input() hideClearSearchButton = false;\r\n\r\n  /**\r\n   * Always restore selected options on selectionChange for mode multi (e.g. for lazy loading/infinity scrolling).\r\n   * Defaults to false, so selected options are only restored while filtering is active.\r\n   */\r\n  @Input() alwaysRestoreSelectedOptionsMulti = false;\r\n\r\n  /** Output emitter to send to parent component with the toggle all boolean */\r\n  @Output() toggleAll = new EventEmitter<boolean>();\r\n\r\n  /** Reference to the search input field */\r\n  @ViewChild('searchSelectInput', { read: ElementRef, static: true }) searchSelectInput!: ElementRef;\r\n\r\n  /** Reference to the search input field */\r\n  @ViewChild('innerSelectSearch', { read: ElementRef, static: true }) innerSelectSearch!: ElementRef;\r\n\r\n  /** Reference to custom search input clear icon */\r\n  @ContentChild(MatSelectSearchClearDirective) clearIcon!: MatSelectSearchClearDirective;\r\n\r\n  /** Reference to custom no entries found element */\r\n  @ContentChild(MatSelectNoEntriesFoundDirective) noEntriesFound!: MatSelectNoEntriesFoundDirective;\r\n\r\n  /** Current search value */\r\n  get value(): string {\r\n    return this._formControl.value;\r\n  }\r\n  private _lastExternalInputValue: string | undefined;\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-empty-function\r\n  onTouched: Function = (_: any) => { };\r\n\r\n  /** Reference to the MatLegacySelect options */\r\n  public set _options(_options: QueryList<MatLegacyOption> | null) {\r\n    this._options$.next(_options);\r\n  }\r\n  public get _options(): QueryList<MatLegacyOption> | null {\r\n    return this._options$.getValue();\r\n  }\r\n  public _options$: BehaviorSubject<QueryList<MatLegacyOption>|null> = new BehaviorSubject<QueryList<MatLegacyOption>|null>(null);\r\n\r\n  private optionsList$: Observable<MatLegacyOption[]> = this._options$.pipe(\r\n    switchMap(_options => _options ?\r\n      _options.changes.pipe(\r\n        map(options => options.toArray()),\r\n        startWith<MatLegacyOption[]>(_options.toArray()),\r\n      ) : of([])\r\n    )\r\n  );\r\n\r\n  private optionsLength$: Observable<number> = this.optionsList$.pipe(\r\n    map(options => options ? options.length : 0)\r\n  );\r\n\r\n  /** Previously selected values when using <mat-select [multiple]=\"true\">*/\r\n  private previousSelectedValues!: any[];\r\n\r\n  public _formControl: FormControl<string> = new FormControl<string>('', {nonNullable: true});\r\n\r\n  /** whether to show the no entries found message */\r\n  public _showNoEntriesFound$: Observable<boolean> = combineLatest([\r\n    this._formControl.valueChanges,\r\n    this.optionsLength$\r\n  ]).pipe(\r\n    map(([value, optionsLength]) => {\r\n      const result: boolean = (!!this.noEntriesFoundLabel) && (!!value) && optionsLength === this.getOptionsLengthOffset();\r\n      return result;\r\n    })\r\n  );\r\n\r\n  /** Subject that emits when the component has been destroyed. */\r\n  private _onDestroy = new Subject<void>();\r\n\r\n  /** Reference to active descendant for ARIA Support. */\r\n  private activeDescendant!: HTMLElement;\r\n  // private hostElement: Element,\r\n\r\n  constructor(\r\n    @Inject(MatLegacySelect) public matSelect: MatLegacySelect,\r\n    @Optional() @SkipSelf() @Host() private matOption: MatLegacyOption,\r\n    public changeDetectorRef: ChangeDetectorRef,\r\n    private _viewportRuler: ViewportRuler,\r\n    @Optional() @Inject(MatFormField) public matFormField: MatFormField | null = null,\r\n    @Optional() @Inject(MAT_SELECTSEARCH_DEFAULT_OPTIONS) defaultOptions?: MatSelectSearchOptions\r\n  ) {\r\n    this.applyDefaultOptions(defaultOptions);\r\n  }\r\n\r\n  private applyDefaultOptions(defaultOptions?: MatSelectSearchOptions) {\r\n    if (!defaultOptions) {\r\n      return;\r\n    }\r\n    for (const key of configurableDefaultOptions) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (defaultOptions.hasOwnProperty(key)) {\r\n        (this[key] as any) = defaultOptions[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // set custom mat-option class if the component was placed inside a mat-option\r\n    if (this.matOption) {\r\n      this.matOption.disabled = true;\r\n      this.matOption._getHostElement().classList.add('contains-mat-select-search');\r\n      this.matOption._getHostElement().setAttribute('aria-hidden', 'true');\r\n    } else {\r\n      console.error('<ngx-mat-select-search> must be placed inside a <mat-option> element');\r\n    }\r\n\r\n    // when the select dropdown panel is opened or closed\r\n    this.matSelect.openedChange\r\n      .pipe(\r\n        delay(1),\r\n        takeUntil(this._onDestroy)\r\n      )\r\n      .subscribe((opened) => {\r\n        if (opened) {\r\n          this.updateInputWidth();\r\n          // focus the search field when opening\r\n          if (!this.disableInitialFocus) {\r\n            this._focus();\r\n          }\r\n        } else {\r\n          // clear it when closing\r\n          if (this.clearSearchInput) {\r\n            this._reset();\r\n          }\r\n        }\r\n      });\r\n\r\n    // set the first item active after the options changed\r\n    this.matSelect.openedChange\r\n      .pipe(\r\n        take(1),\r\n        switchMap((_) => {\r\n        this._options = this.matSelect.options;\r\n\r\n        // Closure variable for tracking the most recent first option.\r\n        // In order to avoid avoid causing the list to\r\n        // scroll to the top when options are added to the bottom of\r\n        // the list (eg: infinite scroll), we compare only\r\n        // the changes to the first options to determine if we\r\n        // should set the first item as active.\r\n        // This prevents unnecessary scrolling to the top of the list\r\n        // when options are appended, but allows the first item\r\n        // in the list to be set as active by default when there\r\n        // is no active selection\r\n        let previousFirstOption = this._options.toArray()[this.getOptionsLengthOffset()];\r\n\r\n        return this._options.changes\r\n          .pipe(tap(() => {\r\n            // avoid \"expression has been changed\" error\r\n            setTimeout(() => {\r\n              // Convert the QueryList to an array\r\n              const options = this._options?.toArray() ?? [];\r\n\r\n              // The true first item is offset by 1\r\n              const currentFirstOption = options[this.getOptionsLengthOffset()];\r\n\r\n              const keyManager = this.matSelect._keyManager;\r\n              if (keyManager && this.matSelect.panelOpen) {\r\n\r\n                // set first item active and input width\r\n\r\n                // Check to see if the first option in these changes is different from the previous.\r\n                const firstOptionIsChanged = !this.matSelect.compareWith(previousFirstOption, currentFirstOption);\r\n\r\n                // CASE: The first option is different now.\r\n                // Indiciates we should set it as active and scroll to the top.\r\n                if (firstOptionIsChanged\r\n                  || !keyManager.activeItem\r\n                  || !options.find(option => this.matSelect.compareWith(option, keyManager.activeItem))) {\r\n                  keyManager.setFirstItemActive();\r\n                }\r\n\r\n                // wait for panel width changes\r\n                setTimeout(() => {\r\n                  this.updateInputWidth();\r\n                });\r\n              }\r\n\r\n              // Update our reference\r\n              previousFirstOption = currentFirstOption;\r\n            });\r\n          }));\r\n        })\r\n      )\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe();\r\n\r\n    // add or remove css class depending on whether to show the no entries found message\r\n    // note: this is hacky\r\n    this._showNoEntriesFound$.pipe(\r\n      takeUntil(this._onDestroy)\r\n    ).subscribe(showNoEntriesFound => {\r\n      // set no entries found class on mat option\r\n      if (this.matOption) {\r\n        if (showNoEntriesFound) {\r\n          this.matOption._getHostElement().classList.add('mat-select-search-no-entries-found');\r\n        } else {\r\n          this.matOption._getHostElement().classList.remove('mat-select-search-no-entries-found');\r\n        }\r\n      }\r\n    });\r\n\r\n    // resize the input width when the viewport is resized, i.e. the trigger width could potentially be resized\r\n    this._viewportRuler.change()\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        if (this.matSelect.panelOpen) {\r\n          this.updateInputWidth();\r\n        }\r\n      });\r\n\r\n    this.initMultipleHandling();\r\n\r\n    this.optionsList$.pipe(\r\n      takeUntil(this._onDestroy)\r\n    ).subscribe(() => {\r\n      // update view when available options change\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  _emitSelectAllBooleanToParent(state: boolean) {\r\n    this.toggleAll.emit(state);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n\r\n  _isToggleAllCheckboxVisible(): boolean {\r\n    return (this.matSelect?.multiple) && this.showToggleAllCheckbox;\r\n  }\r\n\r\n  /**\r\n   * Handles the key down event with MatLegacySelect.\r\n   * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\r\n   * @param event\r\n   */\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    // Prevent propagation for all alphanumeric characters in order to avoid selection issues\r\n    if ((event.key && event.key.length === 1) ||\r\n      (event.keyCode >= A && event.keyCode <= Z) ||\r\n      (event.keyCode >= ZERO && event.keyCode <= NINE) ||\r\n      (event.keyCode === SPACE)\r\n      || (this.preventHomeEndKeyPropagation && (event.keyCode === HOME || event.keyCode === END))\r\n    ) {\r\n      event.stopPropagation();\r\n    }\r\n\r\n    if ((this.matSelect?.multiple) && event.key && event.keyCode === ENTER) {\r\n      // Regain focus after multiselect, so we can further type\r\n      setTimeout(() => this._focus());\r\n    }\r\n\r\n    // Special case if click Escape, if input is empty, close the dropdown, if not, empty out the search field\r\n    if (this.enableClearOnEscapePressed === true && event.keyCode === ESCAPE && this.value) {\r\n      this._reset(true);\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the key up event with MatLegacySelect.\r\n   * Allows e.g. the announcing of the currently activeDescendant by screen readers.\r\n   */\r\n  _handleKeyup(event: KeyboardEvent) {\r\n    if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {\r\n      const ariaActiveDescendantId = this.matSelect._getAriaActiveDescendant();\r\n      const optionArray = this._options?.toArray() ?? [];\r\n      const index = optionArray.findIndex(item => item && item['id'] && item['id'] === ariaActiveDescendantId);\r\n      if (index !== -1) {\r\n        this.unselectActiveDescendant();\r\n        this.activeDescendant = optionArray[index]._getHostElement();\r\n        this.activeDescendant.setAttribute('aria-selected', 'true');\r\n        this.searchSelectInput.nativeElement.setAttribute('aria-activedescendant', ariaActiveDescendantId);\r\n      }\r\n    }\r\n  }\r\n\r\n  writeValue(value: string) {\r\n    this._lastExternalInputValue = value;\r\n    this._formControl.setValue(value);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  onBlur() {\r\n    this.unselectActiveDescendant();\r\n    this.onTouched();\r\n  }\r\n\r\n  registerOnChange(fn: (value: string) => void) {\r\n    this._formControl.valueChanges.pipe(\r\n      filter(value => value !== this._lastExternalInputValue),\r\n      tap(() => this._lastExternalInputValue = undefined),\r\n      takeUntil(this._onDestroy)\r\n    ).subscribe(fn);\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  registerOnTouched(fn: Function) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * Focuses the search input field\r\n   */\r\n  public _focus() {\r\n    if (!this.searchSelectInput || !this.matSelect.panel) {\r\n      return;\r\n    }\r\n    // save and restore scrollTop of panel, since it will be reset by focus()\r\n    // note: this is hacky\r\n    const panel = this.matSelect.panel.nativeElement;\r\n    const scrollTop = panel.scrollTop;\r\n\r\n    // focus\r\n    this.searchSelectInput.nativeElement.focus();\r\n\r\n    panel.scrollTop = scrollTop;\r\n  }\r\n\r\n  /**\r\n   * Resets the current search value\r\n   * @param focus whether to focus after resetting\r\n   */\r\n  public _reset(focus?: boolean) {\r\n    this._formControl.setValue('');\r\n    if (focus) {\r\n      this._focus();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Initializes handling <mat-select [multiple]=\"true\">\r\n   * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\r\n   */\r\n  private initMultipleHandling() {\r\n    if (this.matSelect.ngControl === null) {\r\n      if (this.matSelect?.multiple) {\r\n        // note: the access to MatLegacySelect.ngControl (instead of MatLegacySelect.value / MatLegacySelect.valueChanges)\r\n        // is necessary to properly work in multi-selection mode.\r\n        console.error('the mat-select containing ngx-mat-select-search must have a ngModel or formControl directive when multiple=true');\r\n      }\r\n      return;\r\n    }\r\n    const valueChanges = this.matSelect.ngControl.valueChanges;\r\n    if (valueChanges === null) return;\r\n\r\n    // if <mat-select [multiple]=\"true\">\r\n    // store previously selected values and restore them when they are deselected\r\n    // because the option is not available while we are currently filtering\r\n    this.previousSelectedValues = this.matSelect.ngControl.value;\r\n\r\n    valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe((values) => {\r\n        let restoreSelectedValues = false;\r\n        if (this.matSelect?.multiple) {\r\n          if ((this.alwaysRestoreSelectedOptionsMulti || (this._formControl.value && this._formControl.value.length))\r\n            && this.previousSelectedValues && Array.isArray(this.previousSelectedValues)) {\r\n            if (!values || !Array.isArray(values)) {\r\n              values = [];\r\n            }\r\n            const optionValues = this.matSelect.options.map(option => option.value);\r\n\r\n            this.previousSelectedValues.forEach(previousValue => {\r\n\r\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n              if (!values.some((v: any) => this.matSelect.compareWith(v, previousValue))\r\n                && !optionValues.some(v => this.matSelect.compareWith(v, previousValue))) {\r\n\r\n                // if a value that was selected before is deselected and not found in the options, it was deselected\r\n                // due to the filtering, so we restore it.\r\n                values.push(previousValue);\r\n                restoreSelectedValues = true;\r\n              }\r\n            });\r\n          }\r\n        }\r\n        this.previousSelectedValues = values;\r\n\r\n        if (restoreSelectedValues) {\r\n          this.matSelect._onChange(values);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   *  Set the width of the innerSelectSearch to fit even custom scrollbars\r\n   *  And support all Operation Systems\r\n   */\r\n  public updateInputWidth() {\r\n    if (!this.innerSelectSearch || !this.innerSelectSearch.nativeElement) {\r\n      return;\r\n    }\r\n    let element: HTMLElement | null = this.innerSelectSearch.nativeElement;\r\n    let panelElement: HTMLElement | undefined;\r\n    while ((element = element?.parentElement ?? null) !== null) {\r\n      if (element.classList.contains('mat-select-panel')) {\r\n        panelElement = element;\r\n        break;\r\n      }\r\n    }\r\n    if (panelElement) {\r\n      this.innerSelectSearch.nativeElement.style.width = panelElement.clientWidth + 'px';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine the offset to length that can be caused by the optional MatLegacyOption used as a search input.\r\n   */\r\n  private getOptionsLengthOffset(): number {\r\n    if (this.matOption) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  private unselectActiveDescendant() {\r\n    this.activeDescendant?.removeAttribute('aria-selected');\r\n    this.searchSelectInput.nativeElement.removeAttribute('aria-activedescendant');\r\n  }\r\n\r\n}\r\n","<!--\r\nCopyright (c) 2018 Bithost GmbH All Rights Reserved.\r\n\r\nUse of this source code is governed by an MIT-style license that can be\r\nfound in the LICENSE file at https://angular.io/license\r\n-->\r\n<!-- Placeholder to adjust vertical offset of the mat-option elements -->\r\n<input matInput class=\"mat-select-search-input mat-select-search-hidden\"/>\r\n\r\n<!-- Note: the  mat-datepicker-content mat-tab-header are needed to inherit the material theme colors, see PR #22 -->\r\n<div\r\n      #innerSelectSearch\r\n      class=\"mat-select-search-inner mat-typography mat-datepicker-content mat-tab-header\"\r\n      [ngClass]=\"{'mat-select-search-inner-multiple': matSelect.multiple, 'mat-select-search-inner-toggle-all': _isToggleAllCheckboxVisible() }\">\r\n\r\n  <mat-checkbox *ngIf=\"_isToggleAllCheckboxVisible()\"\r\n                [color]=\"matFormField?.color\"\r\n                class=\"mat-select-search-toggle-all-checkbox\"\r\n                [checked]=\"toggleAllCheckboxChecked\"\r\n                [indeterminate]=\"toggleAllCheckboxIndeterminate\"\r\n                [matTooltip]=\"toggleAllCheckboxTooltipMessage\"\r\n                matTooltipClass=\"ngx-mat-select-search-toggle-all-tooltip\"\r\n                [matTooltipPosition]=\"toggleAllCheckboxTooltipPosition\"\r\n                (change)=\"_emitSelectAllBooleanToParent($event.checked)\"\r\n  ></mat-checkbox>\r\n\r\n  <input class=\"mat-select-search-input\"\r\n         autocomplete=\"off\"\r\n         [type]=\"type\"\r\n         [formControl]=\"_formControl\"\r\n         #searchSelectInput\r\n         (keydown)=\"_handleKeydown($event)\"\r\n         (keyup)=\"_handleKeyup($event)\"\r\n         (blur)=\"onBlur()\"\r\n         [placeholder]=\"placeholderLabel\"\r\n         [attr.aria-label]=\"ariaLabel\"\r\n  />\r\n  <mat-spinner *ngIf=\"searching\"\r\n          class=\"mat-select-search-spinner\"\r\n          diameter=\"16\"></mat-spinner>\r\n\r\n  <button *ngIf=\"!hideClearSearchButton && value && !searching\"\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"_reset(true)\"\r\n          class=\"mat-select-search-clear\">\r\n    <ng-content *ngIf=\"clearIcon; else defaultIcon\" select=\"[ngxMatSelectSearchClear]\"></ng-content>\r\n    <ng-template #defaultIcon>\r\n      <mat-icon [svgIcon]=\"closeSvgIcon ?? ''\">\r\n        {{!closeSvgIcon ? closeIcon : null}}\r\n      </mat-icon>\r\n    </ng-template>\r\n  </button>\r\n\r\n  <ng-content select=\".mat-select-search-custom-header-content\"></ng-content>\r\n\r\n  <mat-divider></mat-divider>\r\n</div>\r\n\r\n<div *ngIf=\"_showNoEntriesFound$ | async\"\r\n     class=\"mat-select-search-no-entries-found\">\r\n  <ng-content *ngIf=\"noEntriesFound; else defaultNoEntriesFound\"\r\n              select=\"[ngxMatSelectNoEntriesFound]\"></ng-content>\r\n  <ng-template #defaultNoEntriesFound>{{noEntriesFoundLabel}}</ng-template>\r\n</div>\r\n","/**\r\n * Copyright (c) 2018 Bithost GmbH All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { MatSelectSearchComponent } from './mat-select-search.component';\r\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\r\nimport { MatLegacyCheckboxModule as MatCheckboxModule } from '@angular/material/legacy-checkbox';\r\nimport { MatLegacyProgressSpinnerModule as MatProgressSpinnerModule } from '@angular/material/legacy-progress-spinner';\r\nimport { MatLegacyTooltipModule as MatTooltipModule } from '@angular/material/legacy-tooltip';\r\nimport { MatLegacySelectModule } from '@angular/material/legacy-select';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { MatSelectSearchClearDirective } from './mat-select-search-clear.directive';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectNoEntriesFoundDirective } from './mat-select-no-entries-found.directive';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\nexport const MatSelectSearchVersion = '6.0.5';\r\nexport { MatSelectSearchClearDirective };\r\nexport { MatSelectNoEntriesFoundDirective };\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatTooltipModule,\r\n    MatLegacySelectModule,\r\n    MatDividerModule,\r\n  ],\r\n  declarations: [\r\n    MatSelectSearchComponent,\r\n    MatSelectSearchClearDirective,\r\n    MatSelectNoEntriesFoundDirective\r\n  ],\r\n  exports: [\r\n    MatSelectSearchComponent,\r\n    MatSelectSearchClearDirective,\r\n    MatSelectNoEntriesFoundDirective\r\n  ]\r\n})\r\nexport class NgxMatSelectSearchModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestComponentService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-TestComponent',\r\n  template: `\r\n    <p>\r\n      test-component works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class TestComponentComponent {\r\n\r\n}\r\n","import { TestComponentComponent } from './test-component.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { SplitComponent } from './split.component';\r\nimport { SplitAreaDirective } from './split-area.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TestComponentComponent\r\n  ],\r\n  imports: [\r\n  ],\r\n  exports: [\r\n    TestComponentComponent\r\n  ]\r\n})\r\nexport class TestComponentModule { }\r\n\r\n\r\n@NgModule({\r\n  imports: [BrowserModule],\r\n  declarations: [SplitComponent, SplitAreaDirective],\r\n  exports: [SplitComponent, SplitAreaDirective],\r\n})\r\nexport class AngularSplitModule {\r\n}\r\n","/*\r\n * Public API Surface of test-component\r\n */\r\n\r\n// angular-split\r\nexport * from './lib/split.component';\r\nexport * from './lib/split-area.directive';\r\n\r\n// (ngx-)mat-select-search\r\nexport * from './lib/mat-select-no-entries-found.directive';\r\nexport * from './lib/mat-select-search-clear.directive';\r\nexport * from './lib/mat-select-search.component';\r\nexport * from './lib/ngx-mat-select-search.module';\r\n\r\n// test-component\r\nexport * from './lib/test-component.service';\r\nexport * from './lib/test-component.component';\r\nexport * from './lib/test-component.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i1.SplitComponent","MatFormField","MatButtonModule","MatCheckboxModule","MatProgressSpinnerModule","MatTooltipModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIM,SAAU,iBAAiB,CAAC,KAA8C,EAAA;;AAE9E,IAAA,IAAiB,KAAM,CAAC,cAAc,KAAK,SAAS,IAAiB,KAAM,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;QACrG,OAAO;YACL,CAAC,EAAe,KAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO;YAChD,CAAC,EAAe,KAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO;SACjD,CAAC;AACH,KAAA;;SAEI,IAAiB,KAAM,CAAC,OAAO,KAAK,SAAS,IAAiB,KAAM,CAAC,OAAO,KAAK,SAAS,EAAE;QAC/F,OAAO;YACL,CAAC,EAAe,KAAM,CAAC,OAAO;YAC9B,CAAC,EAAe,KAAM,CAAC,OAAO;SAC/B,CAAC;AACH,KAAA;;AAEI,SAAA,IAAoB,KAAM,CAAC,aAAa,KAAK,SAAS,EAAE;AAC3D,QAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,aAA4B,CAAC;QACpD,OAAO;YACL,CAAC,EAAE,QAAQ,CAAC,UAAU;YACtB,CAAC,EAAE,QAAQ,CAAC,SAAS;SACtB,CAAC;AACH,KAAA;AACD,IAAA,OAAO,IAAI,CAAC;AACd,CAAC;SAEe,gBAAgB,CAAC,GAAW,EAAE,GAAW,EAAE,OAAe,EAAA;AACxE,IAAA,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC;AAClF,CAAC;AAEe,SAAA,mBAAmB,CAAC,KAAoB,EAAE,SAAoC,EAAA;;IAE5F,IAAI,SAAS,KAAK,YAAY,EAAE;QAC9B,QAAQ,KAAK,CAAC,GAAG;AACf,YAAA,KAAK,WAAW,CAAC;AACjB,YAAA,KAAK,YAAY,CAAC;AAClB,YAAA,KAAK,QAAQ,CAAC;AACd,YAAA,KAAK,UAAU;gBACb,MAAM;AACR,YAAA;AACE,gBAAA,OAAO,IAAI,CAAC;AACf,SAAA;AACF,KAAA;IACD,IAAI,SAAS,KAAK,UAAU,EAAE;QAC5B,QAAQ,KAAK,CAAC,GAAG;AACf,YAAA,KAAK,SAAS,CAAC;AACf,YAAA,KAAK,WAAW,CAAC;AACjB,YAAA,KAAK,QAAQ,CAAC;AACd,YAAA,KAAK,UAAU;gBACb,MAAM;AACR,YAAA;AACE,gBAAA,OAAO,IAAI,CAAC;AACf,SAAA;AACF,KAAA;AAED,IAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,aAA4B,CAAC;IACpD,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,KAAK,QAAQ,IAAI,KAAK,CAAC,GAAG,KAAK,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IACjF,IAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,EAC/B,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC;IAC/B,QAAQ,KAAK,CAAC,GAAG;AACf,QAAA,KAAK,WAAW;YACd,OAAO,IAAI,MAAM,CAAC;YAClB,MAAM;AACR,QAAA,KAAK,YAAY;YACf,OAAO,IAAI,MAAM,CAAC;YAClB,MAAM;AACR,QAAA,KAAK,SAAS;YACZ,OAAO,IAAI,MAAM,CAAC;YAClB,MAAM;AACR,QAAA,KAAK,WAAW;YACd,OAAO,IAAI,MAAM,CAAC;YAClB,MAAM;AACR,QAAA,KAAK,QAAQ;YACX,IAAI,SAAS,KAAK,UAAU,EAAE;gBAC5B,OAAO,IAAI,MAAM,CAAC;AACnB,aAAA;AAAM,iBAAA;gBACL,OAAO,IAAI,MAAM,CAAC;AACnB,aAAA;YACD,MAAM;AACR,QAAA,KAAK,UAAU;YACb,IAAI,SAAS,KAAK,UAAU,EAAE;gBAC5B,OAAO,IAAI,MAAM,CAAC;AACnB,aAAA;AAAM,iBAAA;gBACL,OAAO,IAAI,MAAM,CAAC;AACnB,aAAA;YACD,MAAM;AACR,QAAA;AACE,YAAA,OAAO,IAAI,CAAC;AACf,KAAA;IAED,OAAO;AACL,QAAA,CAAC,EAAE,OAAO;AACV,QAAA,CAAC,EAAE,OAAO;KACX,CAAC;AACJ,CAAC;AAEe,SAAA,mBAAmB,CAAC,KAAiB,EAAE,SAAoC,EAAA;IACzF,MAAM,IAAI,GAAiB,KAAK,CAAC,aAAc,CAAC,qBAAqB,EAAE,CAAC;AAExE,IAAA,OAAO,SAAS,KAAK,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/D,CAAC;AAEK,SAAU,eAAe,CAAC,CAAM,EAAA;IACpC,OAAO,OAAO,CAAC,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC,KAAK,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC;AACnE,CAAC;AAEe,SAAA,sBAAsB,CAAI,CAAM,EAAE,YAAe,EAAA;AAC/D,IAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS;AAAE,QAAA,OAAO,YAAY,CAAC;AAEvD,IAAA,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACd,IAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC;AAChD,CAAC;AAEe,SAAA,gBAAgB,CAAC,IAAyB,EAAE,KAA2B,EAAA;;IAErF,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,EAAA,IAAI,MAAM,KAAK,IAAI;AAAE,YAAA,KAAK,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;QACjE,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC;AACxE,KAAA;;IAGD,IAAI,IAAI,KAAK,OAAO,EAAE;AACpB,QAAA,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;AACrD,KAAA;AACD,IAAA,OAAO,IAAI,CAAC;AACd,CAAC;AAEK,SAAU,cAAc,CAAC,CAAQ,EAAA;AACrC,IAAA,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE;AACnB,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AAED,IAAA,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,KAAK,IAAI,EAAE;QACjC,OAAO,CAAC,CAAC,IAAI,CAAC;AACf,KAAA;AAED,IAAA,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,KAAK,IAAI,EAAE;AAChC,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;IAED,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,EAAE;QAChC,OAAO,CAAC,CAAC,IAAI,CAAC;AACf,KAAA;AAED,IAAA,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC;AAC7B,CAAC;AAEK,SAAU,cAAc,CAAC,CAAQ,EAAA;AACrC,IAAA,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE;AACnB,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AAED,IAAA,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,KAAK,IAAI,EAAE;QACjC,OAAO,CAAC,CAAC,IAAI,CAAC;AACf,KAAA;AAED,IAAA,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,KAAK,IAAI,EAAE;AAChC,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;IAED,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,EAAE;QAChC,OAAO,CAAC,CAAC,IAAI,CAAC;AACf,KAAA;AAED,IAAA,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC;AAC7B,CAAC;AAEK,SAAU,+BAA+B,CAC7C,IAAyB,EACzB,SAA+B,EAC/B,MAAc,EACd,iBAAyB,EAAA;IAEzB,OAAO,SAAS,CAAC,MAAM,CACrB,CAAC,GAAG,EAAE,IAAI,KAAI;AACZ,QAAA,MAAM,GAAG,GAAG,yBAAyB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;QACjF,IAAI,GAAG,KAAK,IAAI,EAAE;AAChB,YAAA,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,YAAA,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,WAAW,CAAC;AAC9B,SAAA;AACD,QAAA,OAAO,GAAG,CAAC;KACZ,EACD,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAkC,CAC7D,CAAC;AACJ,CAAC;AAED,SAAS,yBAAyB,CAChC,IAAyB,EACzB,YAA2B,EAC3B,MAAc,EACd,iBAAyB,EAAA;;IAGzB,IAAI,MAAM,KAAK,CAAC,EAAE;QAChB,OAAO;YACL,YAAY;AACZ,YAAA,WAAW,EAAE,CAAC;YACd,sBAAsB,EAAE,YAAY,CAAC,kBAAkB;AACvD,YAAA,WAAW,EAAE,CAAC;SACf,CAAC;AACH,KAAA;;IAGD,IAAI,YAAY,CAAC,gBAAgB,KAAK,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;QACrD,OAAO;YACL,YAAY;AACZ,YAAA,WAAW,EAAE,CAAC;AACd,YAAA,sBAAsB,EAAE,CAAC;AACzB,YAAA,WAAW,EAAE,MAAM;SACpB,CAAC;AACH,KAAA;IAED,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,OAAO,gCAAgC,CAAC,YAAY,EAAE,MAAM,EAAE,iBAAiB,CAAC,CAAC;AAClF,KAAA;IAED,IAAI,IAAI,KAAK,OAAO,EAAE;QACpB,OAAO,8BAA8B,CAAC,YAAY,EAAE,MAAM,EAAE,iBAAiB,CAAC,CAAC;AAChF,KAAA;AACD,IAAA,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,gCAAgC,CACvC,YAA2B,EAC3B,MAAc,EACd,iBAAyB,EAAA;AAEzB,IAAA,MAAM,aAAa,GAAG,YAAY,CAAC,gBAAgB,GAAG,MAAM,CAAC;IAC7D,MAAM,eAAe,GAAG,CAAC,aAAa,GAAG,iBAAiB,IAAI,GAAG,CAAC;;IAIlE,IAAI,MAAM,GAAG,CAAC,EAAE;;AAEd,QAAA,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,eAAe,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;;AAErF,YAAA,MAAM,YAAY,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,iBAAiB,CAAC;YAC3E,OAAO;gBACL,YAAY;AACZ,gBAAA,WAAW,EAAE,YAAY;AACzB,gBAAA,sBAAsB,EAAE,YAAY,CAAC,IAAI,CAAC,OAAO;AACjD,gBAAA,WAAW,EAAE,YAAY,CAAC,gBAAgB,GAAG,MAAM,GAAG,YAAY;aACnE,CAAC;AACH,SAAA;QACD,OAAO;YACL,YAAY;AACZ,YAAA,WAAW,EAAE,MAAM;YACnB,sBAAsB,EAAE,eAAe,GAAG,GAAG,GAAG,GAAG,GAAG,eAAe;AACrE,YAAA,WAAW,EAAE,CAAC;SACf,CAAC;AACH,KAAA;;SAGI,IAAI,MAAM,GAAG,CAAC,EAAE;;AAEnB,QAAA,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,eAAe,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;;AAErF,YAAA,MAAM,YAAY,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,iBAAiB,CAAC;YAC3E,OAAO;gBACL,YAAY;AACZ,gBAAA,WAAW,EAAE,YAAY;AACzB,gBAAA,sBAAsB,EAAE,YAAY,CAAC,IAAI,CAAC,OAAO;AACjD,gBAAA,WAAW,EAAE,YAAY,CAAC,gBAAgB,GAAG,MAAM,GAAG,YAAY;aACnE,CAAC;AACH,SAAA;;aAEI,IAAI,eAAe,GAAG,CAAC,EAAE;;YAE5B,OAAO;gBACL,YAAY;AACZ,gBAAA,WAAW,EAAE,CAAC,YAAY,CAAC,gBAAgB;AAC3C,gBAAA,sBAAsB,EAAE,CAAC;AACzB,gBAAA,WAAW,EAAE,MAAM,GAAG,YAAY,CAAC,gBAAgB;aACpD,CAAC;AACH,SAAA;QACD,OAAO;YACL,YAAY;AACZ,YAAA,WAAW,EAAE,MAAM;AACnB,YAAA,sBAAsB,EAAE,eAAe;AACvC,YAAA,WAAW,EAAE,CAAC;SACf,CAAC;AACH,KAAA;AACD,IAAA,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,8BAA8B,CACrC,YAA2B,EAC3B,MAAc,EACd,kBAA0B,EAAA;AAE1B,IAAA,MAAM,aAAa,GAAG,YAAY,CAAC,gBAAgB,GAAG,MAAM,CAAC;;IAI7D,IAAI,MAAM,GAAG,CAAC,EAAE;;AAEd,QAAA,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,aAAa,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;YACnF,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE,YAAY,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,gBAAgB;gBACtE,sBAAsB,EAAE,CAAC,CAAC;AAC1B,gBAAA,WAAW,EAAE,aAAa,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO;aACvD,CAAC;AACH,SAAA;QACD,OAAO;YACL,YAAY;AACZ,YAAA,WAAW,EAAE,MAAM;YACnB,sBAAsB,EAAE,CAAC,CAAC;AAC1B,YAAA,WAAW,EAAE,CAAC;SACf,CAAC;AACH,KAAA;;SAGI,IAAI,MAAM,GAAG,CAAC,EAAE;;AAEnB,QAAA,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,aAAa,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;YACnF,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE,YAAY,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,aAAa;gBAC/D,sBAAsB,EAAE,CAAC,CAAC;AAC1B,gBAAA,WAAW,EAAE,aAAa,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO;aACvD,CAAC;AACH,SAAA;;aAEI,IAAI,aAAa,GAAG,CAAC,EAAE;YAC1B,OAAO;gBACL,YAAY;AACZ,gBAAA,WAAW,EAAE,CAAC,YAAY,CAAC,gBAAgB;gBAC3C,sBAAsB,EAAE,CAAC,CAAC;AAC1B,gBAAA,WAAW,EAAE,MAAM,GAAG,YAAY,CAAC,gBAAgB;aACpD,CAAC;AACH,SAAA;QACD,OAAO;YACL,YAAY;AACZ,YAAA,WAAW,EAAE,MAAM;YACnB,sBAAsB,EAAE,CAAC,CAAC;AAC1B,YAAA,WAAW,EAAE,CAAC;SACf,CAAC;AACH,KAAA;AACD,IAAA,OAAO,IAAI,CAAC;AACd,CAAC;AAEe,SAAA,cAAc,CAAC,IAAyB,EAAE,IAA6B,EAAA;IACrF,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC;AAC3D,KAAA;SAAM,IAAI,IAAI,KAAK,OAAO,EAAE;;QAE3B,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AACxC,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC;AACrF,SAAA;AACF,KAAA;AACH;;ACjWO,MAAM,6BAA6B,GAAG,IAAI,cAAc,CAA2B,6BAA6B,CAAC;;AC2CxH;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BG;MAkCU,cAAc,CAAA;IACzB,IAAa,SAAS,CAAC,CAA4B,EAAA;AACjD,QAAA,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,UAAU,GAAG,UAAU,GAAG,YAAY,CAAC;AAE/D,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAM,GAAA,EAAA,IAAI,CAAC,UAAU,CAAA,CAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,QAAQ,CAAC,WAAW,CACvB,IAAI,CAAC,KAAK,CAAC,aAAa,EACxB,CAAM,GAAA,EAAA,IAAI,CAAC,UAAU,KAAK,UAAU,GAAG,YAAY,GAAG,UAAU,CAAE,CAAA,CACnE,CAAC;AAEF,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KAC1B;AAED,IAAA,IAAI,SAAS,GAAA;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAED,IAAa,IAAI,CAAC,CAAsB,EAAA;AACtC,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,OAAO,GAAG,OAAO,GAAG,SAAS,CAAC;AAEjD,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAM,GAAA,EAAA,IAAI,CAAC,KAAK,CAAA,CAAE,CAAC,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAM,GAAA,EAAA,IAAI,CAAC,KAAK,KAAK,OAAO,GAAG,SAAS,GAAG,OAAO,CAAE,CAAA,CAAC,CAAC;AAE1G,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACzB;AAED,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,IAAa,UAAU,CAAC,CAAgB,EAAA;QACtC,IAAI,CAAC,WAAW,GAAG,sBAAsB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAEjD,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KAC1B;AAED,IAAA,IAAI,UAAU,GAAA;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,IAAa,UAAU,CAAC,CAAS,EAAA;QAC/B,IAAI,CAAC,WAAW,GAAG,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACjD;AAED,IAAA,IAAI,UAAU,GAAA;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,IAAa,YAAY,CAAC,CAAU,EAAA;AAClC,QAAA,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;KACzC;AAED,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAED,IAAa,aAAa,CAAC,CAAU,EAAA;AACnC,QAAA,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QAEzC,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;AACnE,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;AACtE,SAAA;KACF;AAED,IAAA,IAAI,aAAa,GAAA;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IAED,IAAa,QAAQ,CAAC,CAAU,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QAEpC,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;AACjE,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;AACpE,SAAA;KACF;AAED,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAED,IAAa,GAAG,CAAC,CAAgB,EAAA;AAC/B,QAAA,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAExC,QAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACxE;AAED,IAAA,IAAI,GAAG,GAAA;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAED,IAAa,sBAAsB,CAAC,CAAS,EAAA;QAC3C,IAAI,CAAC,uBAAuB,GAAG,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC7D;AACD,IAAA,IAAI,sBAAsB,GAAA;QACxB,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;AAMD,IAAA,IAAc,aAAa,GAAA;QACzB,OAAO,IAAI,UAAU,CACnB,CAAC,UAAwC,MAAM,IAAI,CAAC,uBAAuB,GAAG,UAAU,CAAC,CAC1F,CAAC,IAAI,CAAC,YAAY,CAAmB,EAAE,CAAC,CAAC,CAAC;KAC5C;IAcD,WACU,CAAA,MAAc,EACd,KAAiB,EACjB,KAAwB,EACxB,QAAmB,EACwB,YAA6B,EAAA;QAJxE,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAK,CAAA,KAAA,GAAL,KAAK,CAAY;QACjB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAmB;QACxB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;QA1BpB,IAAkB,CAAA,kBAAA,GAAG,CAAC,CAAC;AAUxB,QAAA,IAAA,CAAA,OAAO,GAAoB;AACjC,YAAA,SAAS,EAAE,YAAY;AACvB,YAAA,IAAI,EAAE,SAAS;AACf,YAAA,UAAU,EAAE,EAAE;AACd,YAAA,UAAU,EAAE,CAAC;AACb,YAAA,YAAY,EAAE,KAAK;AACnB,YAAA,aAAa,EAAE,KAAK;AACpB,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,GAAG,EAAE,KAAK;AACV,YAAA,sBAAsB,EAAE,CAAC;SAC1B,CAAC;AAiCQ,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,CAAc,KAAK,CAAC,CAAC;AACjD,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,YAAY,CAAc,KAAK,CAAC,CAAC;AAC/C,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,CAAc,KAAK,CAAC,CAAC;AACnD,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,CAAc,KAAK,CAAC,CAAC;AAIxD,QAAA,IAAA,CAAA,mBAAmB,GAAyB,IAAI,OAAO,EAAE,CAAC;AAClE,QAAA,IAAA,CAAA,aAAa,GAA4B,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;QAEzE,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;QACnB,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;QACvB,IAAoB,CAAA,oBAAA,GAAG,KAAK,CAAC;;QAE7B,IAAa,CAAA,aAAA,GAAoB,EAAE,CAAC;QACpC,IAAQ,CAAA,QAAA,GAA0B,IAAI,CAAC;QACvC,IAAU,CAAA,UAAA,GAAkB,IAAI,CAAC;QACjC,IAAQ,CAAA,QAAA,GAAkB,IAAI,CAAC;QAEvB,IAAc,CAAA,cAAA,GAAiB,EAAE,CAAC;QACjC,IAAW,CAAA,WAAA,GAAiB,EAAE,CAAC;QAIhD,IAAa,CAAA,aAAA,GAAkB,IAAI,CAAC;;AA/ClC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAEvF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACrC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QAC5B,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;KACnE;IAqCM,eAAe,GAAA;AACpB,QAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;;AAEjC,YAAA,UAAU,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC;AAChF,SAAC,CAAC,CAAC;KACJ;IAEO,YAAY,GAAA;QAClB,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;KAC9E;AAEM,IAAA,OAAO,CAAC,SAA6B,EAAA;AAC1C,QAAA,MAAM,OAAO,GAAU;YACrB,SAAS;AACT,YAAA,KAAK,EAAE,CAAC;AACR,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,kBAAkB,EAAE,IAAI;AACxB,YAAA,oBAAoB,EAAE,CAAC;SACxB,CAAC;AAEF,QAAA,IAAI,SAAS,CAAC,OAAO,KAAK,IAAI,EAAE;AAC9B,YAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAElC,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACxB,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAChC,SAAA;KACF;AAEM,IAAA,UAAU,CAAC,SAA6B,EAAA;AAC7C,QAAA,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,EAAE;AAC9D,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC;AACxE,YAAA,IAAI,IAAI;AAAE,gBAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAE3E,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACxB,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,EAAE;AAClE,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC;AACrE,YAAA,IAAI,IAAI;AAAE,gBAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACtE,SAAA;KACF;AAEM,IAAA,UAAU,CAAC,SAA6B,EAAE,WAAoB,EAAE,UAAmB,EAAA;AACxF,QAAA,IAAI,SAAS,CAAC,OAAO,KAAK,IAAI,EAAE;AAC9B,YAAA,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;AACrC,SAAA;KACF;AAEM,IAAA,QAAQ,CAAC,SAA6B,EAAA;AAC3C,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC;QACrE,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO;AACR,SAAA;AAED,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;AAEnC,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACxB;AAEM,IAAA,QAAQ,CAAC,IAAwB,EAAA;AACtC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC;QACnE,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO;AACR,SAAA;AAED,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/E,QAAA,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AACrB,YAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,YAAA,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AAChB,SAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;AAEhC,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACxB;IAEM,mBAAmB,GAAA;AACxB,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KACzE;AAEM,IAAA,mBAAmB,CAAC,KAAuB,EAAA;QAChD,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;AAC/C,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AAED,QAAA,MAAM,cAAc,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACzE,MAAM,OAAO,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QAE5D,IAAI,OAAO,KAAK,KAAK,EAAE;AACrB,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QAED,IAAI,CAAC,cAAc,CAAC,OAAO,CACzB,CAAC,IAAI,EAAE,CAAC,KAAI;YACV,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;AAC1C,SAAC,CACF,CAAC;AACF,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACxB,QAAA,OAAO,IAAI,CAAC;KACb;IAEO,KAAK,CAAC,WAAoB,EAAE,UAAmB,EAAA;QACrD,IAAI,CAAC,YAAY,EAAE,CAAC;;QAIpB,IAAI,WAAW,KAAK,IAAI,EAAE;;AAExB,YAAA,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE;gBAChE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAa,CAAC,CAAC,SAAS,CAAC,KAAK,GAAW,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC3F,aAAA;;YAGD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAI;AACtC,gBAAA,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3C,aAAC,CAAC,CAAC;AACJ,SAAA;;QAID,IAAI,UAAU,KAAK,IAAI,EAAE;YACvB,MAAM,YAAY,GAAG,gBAAgB,CACnC,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CACjD,CAAC;YAEF,QAAQ,IAAI,CAAC,IAAI;gBACf,KAAK,SAAS,EAAE;oBACd,MAAM,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;oBAErD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AACnC,wBAAA,IAAI,CAAC,IAAI,GAAG,YAAY,GAAW,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC;AACrE,wBAAA,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;AACpC,wBAAA,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;AACtC,qBAAC,CAAC,CAAC;oBACH,MAAM;AACP,iBAAA;gBACD,KAAK,OAAO,EAAE;AACZ,oBAAA,IAAI,YAAY,EAAE;wBAChB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;4BACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAChC,4BAAA,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;AACpC,4BAAA,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;AACtC,yBAAC,CAAC,CAAC;AACJ,qBAAA;AAAM,yBAAA;wBACL,MAAM,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;;AAGvF,wBAAA,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;4BACpE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAI;AACtC,gCAAA,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AACjD,gCAAA,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;AACrD,gCAAA,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;AACvD,6BAAC,CAAC,CAAC;AACJ,yBAAA;AAAM,6BAAA,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;;4BAEvC,IAAI,aAAa,GAAG,KAAK,CAAC;4BAC1B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AACnC,gCAAA,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,EAAE;oCAChC,IAAI,aAAa,KAAK,KAAK,EAAE;AAC3B,wCAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,wCAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,wCAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wCACpB,aAAa,GAAG,IAAI,CAAC;AACtB,qCAAA;AAAM,yCAAA;AACL,wCAAA,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;AAChB,wCAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,wCAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACrB,qCAAA;AACF,iCAAA;AAAM,qCAAA;oCACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAChC,oCAAA,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;AACpC,oCAAA,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;AACrC,iCAAA;AACH,6BAAC,CAAC,CAAC;AACJ,yBAAA;AACF,qBAAA;oBACD,MAAM;AACP,iBAAA;AACF,aAAA;AACF,SAAA;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KAC3B;IAEO,iBAAiB,GAAA;;;AAGvB,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;;AAE3B,YAAA,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3E,aAAA;AAAM,iBAAA;;;gBAGL,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,UAAW,CAAC;gBAE7D,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;oBACnC,IAAI,CAAC,SAAS,CAAC,YAAY,CACzB,CAAC,EACD,CAAC,EACD,CAAA,MAAA,EAAS,IAAI,CAAC,IAAI,CAAO,IAAA,EAAA,CAAS,IAAI,CAAC,IAAI,GAAG,GAAG,IAAI,aAAa,CAAA,IAAA,CAAM,EACxE,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,EACnD,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,CACpD,CAAC;AACJ,iBAAC,CAAC,CAAC;AACJ,aAAA;AACF,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;;;YAGhC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;;AAEnC,gBAAA,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AACtB,oBAAA,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;AACpC,wBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACzD,qBAAA;AAAM,yBAAA;AACL,wBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACzD,qBAAA;AACF,iBAAA;AAAM,qBAAA;;;AAGL,oBAAA,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;AACpC,wBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACzD,qBAAA;AAAM,yBAAA;;AAEL,wBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,CACzB,CAAC,EACD,CAAC,EACD,GAAG,IAAI,CAAC,IAAI,CAAI,EAAA,CAAA,EAChB,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,EACnD,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,CACpD,CAAC;AACH,qBAAA;AACF,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAEM,WAAW,CAAC,KAA8B,EAAE,SAAiB,EAAA;AAClE,QAAA,MAAM,SAAS,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;;QAG3C,IACE,IAAI,CAAC,UAAU;;YAEf,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,SAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC;aACrE,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,oBAAoB,CAAC,EAC/C;;AAEA,YAAA,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,EAAE;AAC/B,gBAAA,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACxC,gBAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,gBAAA,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;gBACnC,IAAI,CAAC,YAAY,EAAE,CAAC;AACrB,aAAA;AAAM,iBAAA;;gBAEL,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,MAAK;AAC1C,oBAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,oBAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;oBAChC,IAAI,CAAC,YAAY,EAAE,CAAC;AACtB,iBAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;AACjC,aAAA;AACF,SAAA;KACF;AAEM,IAAA,iBAAiB,CAAC,KAAoB,EAAE,WAAmB,EAAE,SAAiB,EAAA;QACnF,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;YAC1D,OAAO;AACR,SAAA;QAED,MAAM,QAAQ,GAAG,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAA,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAE3C,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AAExB,QAAA,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;AAEM,IAAA,cAAc,CAAC,KAA8B,EAAE,WAAmB,EAAE,SAAiB,EAAA;QAC1F,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AAExB,QAAA,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAA,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;YACtF,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAE/C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAEvG,QAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;YACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzG,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAEO,iBAAiB,CAAC,WAAmB,EAAE,SAAiB,EAAA;QAC9D,IAAI,CAAC,QAAQ,GAAG;YACd,SAAS;AACT,YAAA,iBAAiB,EAAE,CAAC;;AAEpB,YAAA,iBAAiB,EAAE,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,UAAW;AAC3G,YAAA,2BAA2B,EAAE,GAAG;AAChC,YAAA,iBAAiB,EAAE,EAAE;AACrB,YAAA,gBAAgB,EAAE,EAAE;SACrB,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;YACnC,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO;AAC1B,YAAA,MAAM,YAAY,GAAkB;gBAClC,IAAI;AACJ,gBAAA,gBAAgB,EAAE,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC;gBAC3E,kBAAkB,EAAE,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;aACrE,CAAC;AAEF,YAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI;gBAAE,OAAO;AACnC,YAAA,IAAI,IAAI,CAAC,KAAK,GAAG,WAAW,EAAE;AAE5B,gBAAA,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;oBAC9B,IAAI,CAAC,QAAQ,CAAC,iBAAiB,GAAG,CAAC,YAAY,CAAC,CAAC;AAClD,iBAAA;AAAM,qBAAA;oBACL,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACvD,iBAAA;AAEF,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,KAAK,GAAG,WAAW,EAAE;AACnC,gBAAA,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;oBAC9B,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC/C,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,CAAC,YAAY,CAAC,CAAC;AACjD,qBAAA;AACF,iBAAA;AAAM,qBAAA;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACnD,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,QAAQ,CAAC,2BAA2B,GAAG;AAC1C,YAAA,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB;AAClC,YAAA,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB;AAClC,SAAA,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;AAEhD,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/F,OAAO;AACR,SAAA;KACF;IAEO,aAAa,GAAA;AACnB,QAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAEnE,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;KAClC;AAEO,IAAA,cAAc,CAAC,KAA8B,EAAA;QACnD,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AAExB,QAAA,MAAM,SAAS,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAA,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,SAAS,KAAK,IAAI,EAAE;AACjF,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE;AAC1E,gBAAA,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACxC,gBAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC3B,aAAA;AACF,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,EAAE;YAC7B,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;AACzC,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;YAC1B,OAAO;AACR,SAAA;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;IAEO,IAAI,GAAA;QACV,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;gBACtD,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;AAClF,oBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAK;AACnB,wBAAA,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;AAElC,wBAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;AAChE,wBAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;4BAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;4BAC1G,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC/C,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AAAM,qBAAA;oBACL,OAAO;AACR,iBAAA;AACF,aAAA;AACF,SAAA;;AAID,QAAA,IAAI,MAAM,GACR,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,GAAG,CAAC;AACtD,YAAA,IAAI,CAAC,SAAS,KAAK,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;;QAI9G,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK,IAAI,IAAI,CAAC,SAAS,KAAK,YAAY,EAAE;YACzD,MAAM,GAAG,CAAC,MAAM,CAAC;AAClB,SAAA;AAED,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;AAE7E,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI;YAAE,OAAO;AAEnC,QAAA,IAAI,aAAa,KAAK,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE;YACrD,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,QAAQ,CAAC,iBAAiB,GAAG,aAAa,CAAC;;QAIhD,IAAI,WAAW,GAAG,+BAA+B,CAC/C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAC/B,CAAC,aAAa,EACd,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAChC,CAAC;QACF,IAAI,UAAU,GAAG,+BAA+B,CAC9C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAC9B,aAAa,EACb,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAChC,CAAC;;QAGF,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;AACvD,YAAA,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AACjE,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACrE,UAAU,GAAG,+BAA+B,CAC1C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAC9B,aAAa,GAAG,WAAW,CAAC,MAAM,EAClC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAChC,CAAC;AACH,aAAA;AAAM,iBAAA;AACL,gBAAA,WAAW,GAAG,+BAA+B,CAC3C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAC/B,EAAE,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,EACpC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAChC,CAAC;AACH,aAAA;AACF,SAAA;AAAM,aAAA,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;;YAEnC,UAAU,GAAG,+BAA+B,CAC1C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAC9B,aAAa,GAAG,WAAW,CAAC,MAAM,EAClC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAChC,CAAC;AACH,SAAA;AAAM,aAAA,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;;AAElC,YAAA,WAAW,GAAG,+BAA+B,CAC3C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAC/B,EAAE,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,EACpC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAChC,CAAC;AACH,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;;;AAG3B,YAAA,MAAM,GAAG,GAAG,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACtD,YAAA,MAAM,WAAW,GAAG,GAAG,CAAC,IAAI,CAC1B,CAAC,CAAC,KACA,CAAC,CAAC,sBAAsB,KAAK,CAAC;gBAC9B,CAAC,CAAC,sBAAsB,KAAK,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO;gBACxD,CAAC,CAAC,sBAAsB,KAAK,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAC3D,CAAC;AAEF,YAAA,IAAI,WAAW,EAAE;AACf,gBAAA,WAAW,CAAC,sBAAsB;oBAChC,IAAI,CAAC,QAAQ,CAAC,2BAA2B;AACzC,wBAAA,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;AAClG,aAAA;AACF,SAAA;;AAID,QAAA,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACpE,QAAA,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KAClD;AAEO,IAAA,YAAY,CAAC,KAAa,EAAA;AAChC,QAAA,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AACzB,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,EAAE;YAC7B,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;AAErE,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YACpC,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;AACrC,YAAA,IAAI,GAAG,EAAE;AACP,gBAAA,GAAG,EAAE,CAAC;AACP,aAAA;AACF,SAAA;;;AAID,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;AAGxB,QAAA,IAAI,IAAI,CAAC,oBAAoB,KAAK,KAAK,EAAE;AACvC,YAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;gBAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC7C,aAAA;AACF,SAAA;AAED,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;AACnE,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;AAC9G,SAAA;AACD,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;AAG3B,QAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;YACjC,UAAU,CAAC,MAAK;AACd,gBAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,gBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,gBAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAC9B,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;IAEM,MAAM,CAAC,IAA2E,EAAE,SAAiB,EAAA;AAC1G,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAEzC,IAAI,IAAI,KAAK,OAAO,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAC3C,SAAA;aAAM,IAAI,IAAI,KAAK,KAAK,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACzC,SAAA;aAAM,IAAI,IAAI,KAAK,OAAO,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7C,SAAA;aAAM,IAAI,IAAI,KAAK,UAAU,EAAE;YAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAChD,SAAA;aAAM,IAAI,IAAI,KAAK,eAAe,EAAE;YACnC,IAAI,IAAI,CAAC,uBAAuB,EAAE;AAChC,gBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACjE,aAAA;AACF,SAAA;aAAM,IAAI,IAAI,KAAK,UAAU,EAAE;;YAE9B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACrD,SAAA;KACF;IAEM,WAAW,GAAA;QAChB,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;AAEM,IAAA,YAAY,CAAC,IAAwB,EAAE,OAAe,EAAE,MAAwB,EAAA;AACrF,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC;QACnE,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO;AACR,SAAA;AACD,QAAA,MAAM,WAAW,GAAG,MAAM,KAAK,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD,QAAA,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;AAC5B,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC;AACpC,YAAA,IAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC;AACzC,SAAA;AACD,QAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AACpB,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,KAAK,CAAA,EAAG,IAAI,CAAC,KAAK,GAAG,WAAW,CAAA,CAAE,CAAC,CAAC;AACtG,QAAA,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,EAAE,2BAA2B,CAAC,CAAC;AACxE,SAAA;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;KACrC;AAEM,IAAA,UAAU,CAAC,IAAwB,EAAA;AACxC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC;QACnE,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC;AACpC,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAC/B,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAA,CAAE,CAAC,CAAC;AACpH,QAAA,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,EAAE,2BAA2B,CAAC,CAAC;AAC3E,SAAA;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;KACrC;AAEM,IAAA,mBAAmB,CAAC,IAAmB,EAAA;QAC5C,IAAI,IAAI,KAAK,IAAI,EAAE;AACjB,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;KAC1C;AApyBU,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,4HAgIH,6BAA6B,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAhIxC,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAc,EA3Bf,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,cAAA,EAAA,aAAA,EAAA,eAAA,EAAA,QAAA,EAAA,UAAA,EAAA,GAAA,EAAA,KAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,EAAA,OAAA,EAAA,EAAA,aAAA,EAAA,eAAA,EAAA,SAAA,EAAA,WAAA,EAAA,OAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,SAAA,EAAA,CAAA,WAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AAwBO,kBAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,g+DAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA,EAAA;;2FAGN,cAAc,EAAA,UAAA,EAAA,CAAA;kBAhC1B,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,UAAU,YACV,SAAS,EAAA,eAAA,EACF,uBAAuB,CAAC,MAAM,EAErC,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;mBAwBO,EACF,aAAA,EAAA,iBAAiB,CAAC,QAAQ,EAAA,MAAA,EAAA,CAAA,g+DAAA,CAAA,EAAA,CAAA;;0BAkItC,QAAQ;;0BAAI,MAAM;2BAAC,6BAA6B,CAAA;4CA/HtC,SAAS,EAAA,CAAA;sBAArB,KAAK;gBAgBO,IAAI,EAAA,CAAA;sBAAhB,KAAK;gBAaO,UAAU,EAAA,CAAA;sBAAtB,KAAK;gBAUO,UAAU,EAAA,CAAA;sBAAtB,KAAK;gBAQO,YAAY,EAAA,CAAA;sBAAxB,KAAK;gBAQO,aAAa,EAAA,CAAA;sBAAzB,KAAK;gBAcO,QAAQ,EAAA,CAAA;sBAApB,KAAK;gBAcO,GAAG,EAAA,CAAA;sBAAf,KAAK;gBAUO,sBAAsB,EAAA,CAAA;sBAAlC,KAAK;gBAOG,kBAAkB,EAAA,CAAA;sBAA1B,KAAK;gBAEG,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBAEQ,aAAa,EAAA,CAAA;sBAA1B,MAAM;gBAiDG,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBACG,OAAO,EAAA,CAAA;sBAAhB,MAAM;gBACG,WAAW,EAAA,CAAA;sBAApB,MAAM;gBACG,cAAc,EAAA,CAAA;sBAAvB,MAAM;gBAmB4B,SAAS,EAAA,CAAA;sBAA3C,YAAY;uBAAC,WAAW,CAAA;;;MClRd,kBAAkB,CAAA;IAG7B,IAAa,KAAK,CAAC,CAAgB,EAAA;QACjC,IAAI,CAAC,MAAM,GAAG,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAE9C,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KAC1C;AAED,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAID,IAAa,IAAI,CAAC,CAAgB,EAAA;QAChC,IAAI,CAAC,KAAK,GAAG,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAE7C,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;KAC1C;AAED,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAID,IAAa,OAAO,CAAC,CAAgB,EAAA;QACnC,IAAI,CAAC,QAAQ,GAAG,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAEhD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;KAC1C;AAED,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAID,IAAa,OAAO,CAAC,CAAgB,EAAA;QACnC,IAAI,CAAC,QAAQ,GAAG,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAEhD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;KAC1C;AAED,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAID,IAAa,QAAQ,CAAC,CAAU,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QAEpC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;KAC1C;AAED,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAID,IAAa,OAAO,CAAC,CAAU,EAAA;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QAEnC,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,YAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC1B,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAClE,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC1B,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC/D,SAAA;KACF;AAED,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AAOD,IAAA,WAAA,CACU,MAAc,EACf,KAAiB,EAChB,QAAmB,EACnB,KAAqB,EAAA;QAHrB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACf,IAAK,CAAA,KAAA,GAAL,KAAK,CAAY;QAChB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;QACnB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAgB;QAvFvB,IAAM,CAAA,MAAA,GAAkB,IAAI,CAAC;QAY7B,IAAK,CAAA,KAAA,GAAkB,IAAI,CAAC;QAY5B,IAAQ,CAAA,QAAA,GAAkB,IAAI,CAAC;QAY/B,IAAQ,CAAA,QAAA,GAAkB,IAAI,CAAC;QAY/B,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;QAYlB,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;;QAqBP,IAAa,CAAA,aAAA,GAAoB,EAAE,CAAC;AAQnD,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;KACnE;IAEM,QAAQ,GAAA;AACb,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAEzB,QAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;YACjC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC5C,IAAI,CAAC,KAAK,CAAC,aAAa,EACxB,eAAe,EACf,CAAC,KAAsB,KAAI;;AAEzB,gBAAA,IAAI,KAAK,CAAC,YAAY,KAAK,YAAY,EAAE;oBACvC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;AACxC,iBAAA;AACH,aAAC,CACF,CAAC;AACJ,SAAC,CAAC,CAAC;KACJ;AAEM,IAAA,aAAa,CAAC,KAAa,EAAA;AAChC,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;KAClE;IAEM,YAAY,CAAC,IAAY,EAAE,MAAc,EAAE,KAAa,EAAE,KAAc,EAAE,KAAc,EAAA;;AAE7F,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;AACpE,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;AACxE,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;QAEtE,IAAI,KAAK,KAAK,IAAI,EAAE;AAClB,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;AAC5D,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;AAC/D,SAAA;QAED,IAAI,KAAK,KAAK,IAAI,EAAE;AAClB,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;AAC5D,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;AAC/D,SAAA;KACF;IAEM,UAAU,GAAA;AACf,QAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;YACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,EAAE,MAAM,KAAK,CAAC,CAAC,CAAC;YACpG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,WAAW,EAAE,MAAM,KAAK,CAAC,CAAC,CAAC;AACpG,SAAC,CAAC,CAAC;KACJ;IAEM,YAAY,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YACpC,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;AACrC,YAAA,IAAI,GAAG,EAAE;AACP,gBAAA,GAAG,EAAE,CAAC;AACP,aAAA;AACF,SAAA;KACF;IAEM,WAAW,GAAA;QAChB,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC3B,SAAA;AAED,QAAA,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KAC7B;AAEM,IAAA,QAAQ,CAAC,OAAO,GAAG,CAAC,EAAE,SAA2B,OAAO,EAAA;QAC7D,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;KAChD;IAEM,MAAM,GAAA;AACX,QAAA,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KAC7B;8GArKU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAAlB,kBAAkB,EAAA,QAAA,EAAA,gCAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;;AAET,oBAAA,QAAQ,EAAE,gCAAgC;AAC1C,oBAAA,QAAQ,EAAE,aAAa;AACxB,iBAAA,CAAA;wKAIc,KAAK,EAAA,CAAA;sBAAjB,KAAK;gBAYO,IAAI,EAAA,CAAA;sBAAhB,KAAK;gBAYO,OAAO,EAAA,CAAA;sBAAnB,KAAK;gBAYO,OAAO,EAAA,CAAA;sBAAnB,KAAK;gBAYO,QAAQ,EAAA,CAAA;sBAApB,KAAK;gBAYO,OAAO,EAAA,CAAA;sBAAnB,KAAK;;;ACvER;;;;;;;;AAQG;MAIU,gCAAgC,CAAA;8GAAhC,gCAAgC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAAhC,gCAAgC,EAAA,QAAA,EAAA,8BAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAAhC,gCAAgC,EAAA,UAAA,EAAA,CAAA;kBAH5C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,8BAA8B;AACzC,iBAAA,CAAA;;;ACXD;;;;;;AAMG;MAIU,6BAA6B,CAAA;8GAA7B,6BAA6B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAA7B,6BAA6B,EAAA,QAAA,EAAA,2BAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAA7B,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBAHzC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,2BAA2B;AACxC,iBAAA,CAAA;;;ACRD;AACO,MAAM,0BAA0B,GAAG;IACxC,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,cAAc;IACd,qBAAqB;IACrB,uCAAuC;IACvC,4BAA4B;IAC5B,uBAAuB;IACvB,qBAAqB;IACrB,kBAAkB;IAClB,8BAA8B;IAC9B,WAAW;CACH,CAAC;AAIX;;;;;;;;;;;;;;;;AAgBG;AACI,MAAM,gCAAgC,GAAG,IAAI,cAAc,CAAyB,kCAAkC,CAAC;;ACtC9H;;;;;AAKG;AAoCH;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EG;MAcU,wBAAwB,CAAA;;AAoFnC,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;KAChC;;IAOD,IAAW,QAAQ,CAAC,QAA2C,EAAA;AAC7D,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/B;AACD,IAAA,IAAW,QAAQ,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAClC;;IAuCD,WACkC,CAAA,SAA0B,EAClB,SAA0B,EAC3D,iBAAoC,EACnC,cAA6B,EACI,YAAA,GAAoC,IAAI,EAC3B,cAAuC,EAAA;QAL7D,IAAS,CAAA,SAAA,GAAT,SAAS,CAAiB;QAClB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAiB;QAC3D,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QACnC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAe;QACI,IAAY,CAAA,YAAA,GAAZ,YAAY,CAA4B;;QA3I1E,IAAgB,CAAA,gBAAA,GAAG,OAAO,CAAC;;QAG3B,IAAI,CAAA,IAAA,GAAG,MAAM,CAAC;;QAGd,IAAS,CAAA,SAAA,GAAG,OAAO,CAAC;;QAMpB,IAAmB,CAAA,mBAAA,GAAG,yBAAyB,CAAC;AAEzD;;;AAGI;QACK,IAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC;;QAGxB,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;;QAGlB,IAAmB,CAAA,mBAAA,GAAG,KAAK,CAAC;;QAG5B,IAA0B,CAAA,0BAAA,GAAG,KAAK,CAAC;AAE5C;;;AAGG;QACM,IAA4B,CAAA,4BAAA,GAAG,KAAK,CAAC;;QAGrC,IAAqC,CAAA,qCAAA,GAAG,KAAK,CAAC;;QAG9C,IAAS,CAAA,SAAA,GAAG,iBAAiB,CAAC;;QAG9B,IAAqB,CAAA,qBAAA,GAAG,KAAK,CAAC;;QAG9B,IAAwB,CAAA,wBAAA,GAAG,KAAK,CAAC;;QAGjC,IAA8B,CAAA,8BAAA,GAAG,KAAK,CAAC;;QAGvC,IAA+B,CAAA,+BAAA,GAAG,EAAE,CAAC;;QAGrC,IAAgC,CAAA,gCAAA,GAA8D,OAAO,CAAC;;QAGtG,IAAqB,CAAA,qBAAA,GAAG,KAAK,CAAC;AAEvC;;;AAGG;QACM,IAAiC,CAAA,iCAAA,GAAG,KAAK,CAAC;;AAGzC,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,EAAW,CAAC;;AAqBlD,QAAA,IAAA,CAAA,SAAS,GAAa,CAAC,CAAM,KAAI,GAAI,CAAC;AAS/B,QAAA,IAAA,CAAA,SAAS,GAAqD,IAAI,eAAe,CAAkC,IAAI,CAAC,CAAC;AAExH,QAAA,IAAA,CAAA,YAAY,GAAkC,IAAI,CAAC,SAAS,CAAC,IAAI,CACvE,SAAS,CAAC,QAAQ,IAAI,QAAQ;AAC5B,YAAA,QAAQ,CAAC,OAAO,CAAC,IAAI,CACnB,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,EACjC,SAAS,CAAoB,QAAQ,CAAC,OAAO,EAAE,CAAC,CACjD,GAAG,EAAE,CAAC,EAAE,CAAC,CACX,CACF,CAAC;QAEM,IAAc,CAAA,cAAA,GAAuB,IAAI,CAAC,YAAY,CAAC,IAAI,CACjE,GAAG,CAAC,OAAO,IAAI,OAAO,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAC7C,CAAC;AAKK,QAAA,IAAA,CAAA,YAAY,GAAwB,IAAI,WAAW,CAAS,EAAE,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;;QAGrF,IAAoB,CAAA,oBAAA,GAAwB,aAAa,CAAC;YAC/D,IAAI,CAAC,YAAY,CAAC,YAAY;AAC9B,YAAA,IAAI,CAAC,cAAc;AACpB,SAAA,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,aAAa,CAAC,KAAI;YAC7B,MAAM,MAAM,GAAY,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,aAAa,KAAK,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACrH,YAAA,OAAO,MAAM,CAAC;SACf,CAAC,CACH,CAAC;;AAGM,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AAcvC,QAAA,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;KAC1C;AAEO,IAAA,mBAAmB,CAAC,cAAuC,EAAA;QACjE,IAAI,CAAC,cAAc,EAAE;YACnB,OAAO;AACR,SAAA;AACD,QAAA,KAAK,MAAM,GAAG,IAAI,0BAA0B,EAAE;;AAE5C,YAAA,IAAI,cAAc,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBACrC,IAAI,CAAC,GAAG,CAAS,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;AAC1C,aAAA;AACF,SAAA;KACF;IAED,QAAQ,GAAA;;QAEN,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,YAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC/B,YAAA,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;AAC7E,YAAA,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AACtE,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,CAAC,KAAK,CAAC,sEAAsE,CAAC,CAAC;AACvF,SAAA;;QAGD,IAAI,CAAC,SAAS,CAAC,YAAY;AACxB,aAAA,IAAI,CACH,KAAK,CAAC,CAAC,CAAC,EACR,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;AACA,aAAA,SAAS,CAAC,CAAC,MAAM,KAAI;AACpB,YAAA,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,gBAAgB,EAAE,CAAC;;AAExB,gBAAA,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;oBAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;AACf,iBAAA;AACF,aAAA;AAAM,iBAAA;;gBAEL,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACzB,IAAI,CAAC,MAAM,EAAE,CAAC;AACf,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;;QAGL,IAAI,CAAC,SAAS,CAAC,YAAY;aACxB,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,EACP,SAAS,CAAC,CAAC,CAAC,KAAI;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;;;;;;;;;;;AAYvC,YAAA,IAAI,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;AAEjF,YAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO;AACzB,iBAAA,IAAI,CAAC,GAAG,CAAC,MAAK;;gBAEb,UAAU,CAAC,MAAK;;oBAEd,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;oBAG/C,MAAM,kBAAkB,GAAG,OAAO,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;AAElE,oBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;AAC9C,oBAAA,IAAI,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;;;AAK1C,wBAAA,MAAM,oBAAoB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;;;AAIlG,wBAAA,IAAI,oBAAoB;+BACnB,CAAC,UAAU,CAAC,UAAU;+BACtB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,EAAE;4BACvF,UAAU,CAAC,kBAAkB,EAAE,CAAC;AACjC,yBAAA;;wBAGD,UAAU,CAAC,MAAK;4BACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC1B,yBAAC,CAAC,CAAC;AACJ,qBAAA;;oBAGD,mBAAmB,GAAG,kBAAkB,CAAC;AAC3C,iBAAC,CAAC,CAAC;aACJ,CAAC,CAAC,CAAC;AACN,SAAC,CAAC,CACH;AACA,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChC,aAAA,SAAS,EAAE,CAAC;;;AAIf,QAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAC5B,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,CAAC,kBAAkB,IAAG;;YAE/B,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,gBAAA,IAAI,kBAAkB,EAAE;AACtB,oBAAA,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;AACtF,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,oCAAoC,CAAC,CAAC;AACzF,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;;AAGH,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;AACzB,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,MAAK;AACd,YAAA,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACzB,aAAA;AACH,SAAC,CAAC,CAAC;QAEL,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAE5B,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CACpB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,CAAC,MAAK;;AAEf,YAAA,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;AACxC,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,6BAA6B,CAAC,KAAc,EAAA;AAC1C,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KAC5B;IAED,2BAA2B,GAAA;QACzB,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,KAAK,IAAI,CAAC,qBAAqB,CAAC;KACjE;AAED;;;;AAIG;AACH,IAAA,cAAc,CAAC,KAAoB,EAAA;;AAEjC,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC;aACrC,KAAK,CAAC,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC;aACzC,KAAK,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC;AAChD,aAAC,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC;AACtB,gBAAC,IAAI,CAAC,4BAA4B,KAAK,KAAK,CAAC,OAAO,KAAK,IAAI,IAAI,KAAK,CAAC,OAAO,KAAK,GAAG,CAAC,CAAC,EAC3F;YACA,KAAK,CAAC,eAAe,EAAE,CAAC;AACzB,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,KAAK,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE;;YAEtE,UAAU,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACjC,SAAA;;AAGD,QAAA,IAAI,IAAI,CAAC,0BAA0B,KAAK,IAAI,IAAI,KAAK,CAAC,OAAO,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE;AACtF,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAClB,KAAK,CAAC,eAAe,EAAE,CAAC;AACzB,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,YAAY,CAAC,KAAoB,EAAA;QAC/B,IAAI,KAAK,CAAC,OAAO,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;YAC9D,MAAM,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC;YACzE,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;YACnD,MAAM,KAAK,GAAG,WAAW,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,sBAAsB,CAAC,CAAC;AACzG,YAAA,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,eAAe,EAAE,CAAC;gBAC7D,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;gBAC5D,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,YAAY,CAAC,uBAAuB,EAAE,sBAAsB,CAAC,CAAC;AACpG,aAAA;AACF,SAAA;KACF;AAED,IAAA,UAAU,CAAC,KAAa,EAAA;AACtB,QAAA,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;AACrC,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAClC,QAAA,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;KACvC;IAED,MAAM,GAAA;QACJ,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;AAED,IAAA,gBAAgB,CAAC,EAA2B,EAAA;QAC1C,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CACjC,MAAM,CAAC,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,uBAAuB,CAAC,EACvD,GAAG,CAAC,MAAM,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC,EACnD,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;KACjB;;AAGD,IAAA,iBAAiB,CAAC,EAAY,EAAA;AAC5B,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;AAED;;AAEG;IACI,MAAM,GAAA;QACX,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACpD,OAAO;AACR,SAAA;;;QAGD,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC;AACjD,QAAA,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;;AAGlC,QAAA,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAE7C,QAAA,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;KAC7B;AAED;;;AAGG;AACI,IAAA,MAAM,CAAC,KAAe,EAAA;AAC3B,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC/B,QAAA,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,MAAM,EAAE,CAAC;AACf,SAAA;KACF;AAGD;;;AAGG;IACK,oBAAoB,GAAA;AAC1B,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,KAAK,IAAI,EAAE;AACrC,YAAA,IAAI,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE;;;AAG5B,gBAAA,OAAO,CAAC,KAAK,CAAC,iHAAiH,CAAC,CAAC;AAClI,aAAA;YACD,OAAO;AACR,SAAA;QACD,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC;QAC3D,IAAI,YAAY,KAAK,IAAI;YAAE,OAAO;;;;QAKlC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC;QAE7D,YAAY;AACT,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChC,aAAA,SAAS,CAAC,CAAC,MAAM,KAAI;YACpB,IAAI,qBAAqB,GAAG,KAAK,CAAC;AAClC,YAAA,IAAI,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE;gBAC5B,IAAI,CAAC,IAAI,CAAC,iCAAiC,KAAK,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;uBACrG,IAAI,CAAC,sBAAsB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE;oBAC9E,IAAI,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;wBACrC,MAAM,GAAG,EAAE,CAAC;AACb,qBAAA;AACD,oBAAA,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;AAExE,oBAAA,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,aAAa,IAAG;;wBAGlD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;AACrE,+BAAA,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE;;;AAI1E,4BAAA,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;4BAC3B,qBAAqB,GAAG,IAAI,CAAC;AAC9B,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC;AAErC,YAAA,IAAI,qBAAqB,EAAE;AACzB,gBAAA,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAClC,aAAA;AACH,SAAC,CAAC,CAAC;KACN;AAED;;;AAGG;IACI,gBAAgB,GAAA;QACrB,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE;YACpE,OAAO;AACR,SAAA;AACD,QAAA,IAAI,OAAO,GAAuB,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;AACvE,QAAA,IAAI,YAAqC,CAAC;QAC1C,OAAO,CAAC,OAAO,GAAG,OAAO,EAAE,aAAa,IAAI,IAAI,MAAM,IAAI,EAAE;YAC1D,IAAI,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;gBAClD,YAAY,GAAG,OAAO,CAAC;gBACvB,MAAM;AACP,aAAA;AACF,SAAA;AACD,QAAA,IAAI,YAAY,EAAE;AAChB,YAAA,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;AACpF,SAAA;KACF;AAED;;AAEG;IACK,sBAAsB,GAAA;QAC5B,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,YAAA,OAAO,CAAC,CAAC;AACV,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,CAAC,CAAC;AACV,SAAA;KACF;IAEO,wBAAwB,GAAA;AAC9B,QAAA,IAAI,CAAC,gBAAgB,EAAE,eAAe,CAAC,eAAe,CAAC,CAAC;QACxD,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,eAAe,CAAC,uBAAuB,CAAC,CAAC;KAC/E;AAxeU,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EA0IzB,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,eAAe,EAIH,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAY,6BACZ,gCAAgC,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AA/I3C,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,EATxB,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,IAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,cAAA,EAAA,mBAAA,EAAA,qBAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,qBAAA,EAAA,0BAAA,EAAA,4BAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,qCAAA,EAAA,uCAAA,EAAA,SAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,wBAAA,EAAA,0BAAA,EAAA,8BAAA,EAAA,gCAAA,EAAA,+BAAA,EAAA,iCAAA,EAAA,gCAAA,EAAA,kCAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,iCAAA,EAAA,mCAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,SAAA,EAAA;AACT,YAAA;AACE,gBAAA,OAAO,EAAE,iBAAiB;AAC1B,gBAAA,WAAW,EAAE,UAAU,CAAC,MAAM,wBAAwB,CAAC;AACvD,gBAAA,KAAK,EAAE,IAAI;AACZ,aAAA;SACF,EAiFa,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,6BAA6B,iFAG7B,gCAAgC,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,mBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EATN,UAAU,EAGV,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,mBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,UAAU,2CChNpD,+3FAiEA,EAAA,MAAA,EAAA,CAAA,8mDAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,mCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,MAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA,EAAA;;2FDoEa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAbpC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,uBAAuB,EAGtB,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAE,UAAU,CAAC,8BAA8B,CAAC;AACvD,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;qBACF,EACgB,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,+3FAAA,EAAA,MAAA,EAAA,CAAA,8mDAAA,CAAA,EAAA,CAAA;;0BA4I5C,MAAM;2BAAC,eAAe,CAAA;;0BACtB,QAAQ;;0BAAI,QAAQ;;0BAAI,IAAI;;0BAG5B,QAAQ;;0BAAI,MAAM;2BAACA,kBAAY,CAAA;;0BAC/B,QAAQ;;0BAAI,MAAM;2BAAC,gCAAgC,CAAA;4CA5I7C,gBAAgB,EAAA,CAAA;sBAAxB,KAAK;gBAGG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAGG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAGG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBAGG,mBAAmB,EAAA,CAAA;sBAA3B,KAAK;gBAMG,gBAAgB,EAAA,CAAA;sBAAxB,KAAK;gBAGG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAGG,mBAAmB,EAAA,CAAA;sBAA3B,KAAK;gBAGG,0BAA0B,EAAA,CAAA;sBAAlC,KAAK;gBAMG,4BAA4B,EAAA,CAAA;sBAApC,KAAK;gBAGG,qCAAqC,EAAA,CAAA;sBAA7C,KAAK;gBAGG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAGG,qBAAqB,EAAA,CAAA;sBAA7B,KAAK;gBAGG,wBAAwB,EAAA,CAAA;sBAAhC,KAAK;gBAGG,8BAA8B,EAAA,CAAA;sBAAtC,KAAK;gBAGG,+BAA+B,EAAA,CAAA;sBAAvC,KAAK;gBAGG,gCAAgC,EAAA,CAAA;sBAAxC,KAAK;gBAGG,qBAAqB,EAAA,CAAA;sBAA7B,KAAK;gBAMG,iCAAiC,EAAA,CAAA;sBAAzC,KAAK;gBAGI,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAG6D,iBAAiB,EAAA,CAAA;sBAApF,SAAS;uBAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBAGE,iBAAiB,EAAA,CAAA;sBAApF,SAAS;uBAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBAGrB,SAAS,EAAA,CAAA;sBAArD,YAAY;uBAAC,6BAA6B,CAAA;gBAGK,cAAc,EAAA,CAAA;sBAA7D,YAAY;uBAAC,gCAAgC,CAAA;;;AEtNhD;;;;;AAKG;AAiBI,MAAM,sBAAsB,GAAG,QAAQ;MA2BjC,wBAAwB,CAAA;8GAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAxB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,iBAVjC,wBAAwB;YACxB,6BAA6B;AAC7B,YAAA,gCAAgC,aAbhC,YAAY;YACZ,mBAAmB;YACnBC,qBAAe;YACfC,uBAAiB;YACjB,aAAa;YACbC,8BAAwB;YACxBC,sBAAgB;YAChB,qBAAqB;AACrB,YAAA,gBAAgB,aAQhB,wBAAwB;YACxB,6BAA6B;YAC7B,gCAAgC,CAAA,EAAA,CAAA,CAAA,EAAA;AAGvB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,YArBjC,YAAY;YACZ,mBAAmB;YACnBH,qBAAe;YACfC,uBAAiB;YACjB,aAAa;YACbC,8BAAwB;YACxBC,sBAAgB;YAChB,qBAAqB;YACrB,gBAAgB,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAaP,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAvBpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,mBAAmB;wBACnBH,qBAAe;wBACfC,uBAAiB;wBACjB,aAAa;wBACbC,8BAAwB;wBACxBC,sBAAgB;wBAChB,qBAAqB;wBACrB,gBAAgB;AACjB,qBAAA;AACD,oBAAA,YAAY,EAAE;wBACZ,wBAAwB;wBACxB,6BAA6B;wBAC7B,gCAAgC;AACjC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,wBAAwB;wBACxB,6BAA6B;wBAC7B,gCAAgC;AACjC,qBAAA;AACF,iBAAA,CAAA;;;MC3CY,oBAAoB,CAAA;AAE/B,IAAA,WAAA,GAAA,GAAiB;8GAFN,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAApB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCQY,sBAAsB,CAAA;8GAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAtB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,EARvB,QAAA,EAAA,mBAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;AAIT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA,EAAA;;2FAIU,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAVlC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,mBAAmB,EACnB,QAAA,EAAA,CAAA;;;;AAIT,EAAA,CAAA,EAAA,CAAA;;;MCSU,mBAAmB,CAAA;8GAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAAnB,mBAAmB,EAAA,YAAA,EAAA,CAR5B,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAKtB,sBAAsB,CAAA,EAAA,CAAA,CAAA,EAAA;+GAGb,mBAAmB,EAAA,CAAA,CAAA,EAAA;;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAV/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,sBAAsB;AACvB,qBAAA;AACD,oBAAA,OAAO,EAAE,EACR;AACD,oBAAA,OAAO,EAAE;wBACP,sBAAsB;AACvB,qBAAA;AACF,iBAAA,CAAA;;MASY,kBAAkB,CAAA;8GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAAlB,kBAAkB,EAAA,YAAA,EAAA,CAHd,cAAc,EAAE,kBAAkB,aADvC,aAAa,CAAA,EAAA,OAAA,EAAA,CAEb,cAAc,EAAE,kBAAkB,CAAA,EAAA,CAAA,CAAA,EAAA;AAEjC,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,YAJnB,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAIZ,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,aAAa,CAAC;AACxB,oBAAA,YAAY,EAAE,CAAC,cAAc,EAAE,kBAAkB,CAAC;AAClD,oBAAA,OAAO,EAAE,CAAC,cAAc,EAAE,kBAAkB,CAAC;AAC9C,iBAAA,CAAA;;;ACxBD;;AAEG;AAEH;;ACJA;;AAEG;;;;"}